// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_4u_config10_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [31:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [31:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [31:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
output  [31:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [31:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [31:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [31:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_5;
reg   [31:0] sX_5;
reg   [31:0] pY_5;
reg   [31:0] sY_5;
reg   [31:0] kernel_data_V_7_4;
reg   [31:0] kernel_data_V_7_5;
reg   [31:0] kernel_data_V_7_6;
reg   [31:0] kernel_data_V_7_7;
reg   [31:0] kernel_data_V_7_12;
reg   [31:0] kernel_data_V_7_13;
reg   [31:0] kernel_data_V_7_14;
reg   [31:0] kernel_data_V_7_15;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln233_reg_645;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] and_ln185_6_reg_754;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [6:0] indvar_flatten_reg_124;
wire   [0:0] icmp_ln233_fu_170_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    io_acc_block_signal_op119;
reg    ap_block_state6_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln233_reg_645_pp0_iter1_reg;
wire   [6:0] add_ln233_fu_176_p2;
reg   [6:0] add_ln233_reg_649;
reg   [31:0] tmp_data_0_V_reg_654;
wire    io_acc_block_signal_op21;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] tmp_data_1_V_reg_659;
reg   [31:0] tmp_data_2_V_reg_664;
reg   [31:0] tmp_data_3_V_reg_669;
reg   [31:0] pool_window_2_V_10_reg_674;
reg   [31:0] pool_window_2_V_2_reg_679;
reg   [31:0] pool_window_2_V_reg_684;
reg   [31:0] pool_window_2_V_3_reg_689;
reg   [31:0] pool_window_0_V_10_reg_694;
reg   [31:0] pool_window_0_V_2_reg_699;
reg   [31:0] pool_window_0_V_reg_704;
reg   [31:0] pool_window_0_V_3_reg_709;
reg   [31:0] pool_window_1_V_10_reg_714;
reg   [31:0] pool_window_1_V_reg_719;
reg   [31:0] pool_window_1_V_2_reg_724;
reg   [31:0] pool_window_1_V_3_reg_729;
reg   [31:0] pool_window_3_V_10_reg_734;
reg   [31:0] pool_window_3_V_reg_739;
reg   [31:0] pool_window_3_V_2_reg_744;
reg   [31:0] pool_window_3_V_3_reg_749;
wire   [0:0] and_ln185_6_fu_402_p2;
wire   [0:0] icmp_ln1496_fu_408_p2;
reg   [0:0] icmp_ln1496_reg_758;
wire   [0:0] icmp_ln1496_35_fu_414_p2;
reg   [0:0] icmp_ln1496_35_reg_763;
wire   [0:0] icmp_ln1496_37_fu_420_p2;
reg   [0:0] icmp_ln1496_37_reg_768;
wire   [0:0] icmp_ln1496_38_fu_426_p2;
reg   [0:0] icmp_ln1496_38_reg_773;
wire   [0:0] icmp_ln1496_40_fu_432_p2;
reg   [0:0] icmp_ln1496_40_reg_778;
wire   [0:0] icmp_ln1496_41_fu_438_p2;
reg   [0:0] icmp_ln1496_41_reg_783;
wire   [0:0] icmp_ln1496_43_fu_444_p2;
reg   [0:0] icmp_ln1496_43_reg_788;
wire   [0:0] icmp_ln1496_44_fu_450_p2;
reg   [0:0] icmp_ln1496_44_reg_793;
wire   [0:0] icmp_ln203_fu_456_p2;
reg   [0:0] icmp_ln203_reg_798;
wire   [31:0] select_ln218_fu_480_p3;
reg   [31:0] select_ln218_reg_802;
wire   [0:0] icmp_ln207_fu_500_p2;
reg   [0:0] icmp_ln207_reg_807;
wire   [31:0] select_ln213_fu_524_p3;
reg   [31:0] select_ln213_reg_811;
wire   [31:0] tmp_data_0_V_34_fu_548_p3;
reg   [31:0] tmp_data_0_V_34_reg_816;
wire   [31:0] tmp_data_1_V_32_fu_572_p3;
reg   [31:0] tmp_data_1_V_32_reg_821;
wire   [31:0] tmp_data_2_V_32_fu_596_p3;
reg   [31:0] tmp_data_2_V_32_reg_826;
wire   [31:0] tmp_data_3_V_32_fu_620_p3;
reg   [31:0] tmp_data_3_V_32_reg_831;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
wire    call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ready;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_0;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_1;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_2;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_3;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_4;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_5;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_6;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_7;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_8;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_9;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_10;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_11;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_12;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_13;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_14;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_15;
reg    call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call18;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call18;
reg    ap_block_state6_pp0_stage0_iter2_ignore_call18;
reg    ap_block_pp0_stage0_11001_ignoreCallOp34;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_128_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_135;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_135;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_i_i_reg_135;
reg    call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start_reg;
wire   [31:0] add_ln216_fu_462_p2;
wire   [31:0] add_ln211_fu_506_p2;
reg   [31:0] ap_sig_allocacmp_sY_5_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln185_fu_354_p2;
wire   [0:0] icmp_ln185_7_fu_364_p2;
wire   [0:0] icmp_ln185_8_fu_374_p2;
wire   [0:0] icmp_ln185_9_fu_384_p2;
wire   [0:0] and_ln185_5_fu_396_p2;
wire   [0:0] and_ln185_fu_390_p2;
wire   [31:0] add_ln218_fu_474_p2;
wire   [31:0] add_ln213_fu_518_p2;
wire   [31:0] select_ln86_fu_532_p3;
wire   [31:0] select_ln86_35_fu_537_p3;
wire   [0:0] icmp_ln1496_36_fu_542_p2;
wire   [31:0] select_ln86_37_fu_556_p3;
wire   [31:0] select_ln86_38_fu_561_p3;
wire   [0:0] icmp_ln1496_39_fu_566_p2;
wire   [31:0] select_ln86_40_fu_580_p3;
wire   [31:0] select_ln86_41_fu_585_p3;
wire   [0:0] icmp_ln1496_42_fu_590_p2;
wire   [31:0] select_ln86_43_fu_604_p3;
wire   [31:0] select_ln86_44_fu_609_p3;
wire   [0:0] icmp_ln1496_45_fu_614_p2;
wire    ap_CS_fsm_state7;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_326;
reg    ap_condition_330;
reg    ap_condition_321;
reg    ap_condition_311;
reg    ap_condition_235;
reg    ap_condition_886;
reg    ap_condition_229;
reg    ap_condition_891;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 pX_5 = 32'd0;
#0 sX_5 = 32'd0;
#0 pY_5 = 32'd0;
#0 sY_5 = 32'd0;
#0 kernel_data_V_7_4 = 32'd0;
#0 kernel_data_V_7_5 = 32'd0;
#0 kernel_data_V_7_6 = 32'd0;
#0 kernel_data_V_7_7 = 32'd0;
#0 kernel_data_V_7_12 = 32'd0;
#0 kernel_data_V_7_13 = 32'd0;
#0 kernel_data_V_7_14 = 32'd0;
#0 kernel_data_V_7_15 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_4u_config10_s call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ready),
    .in_elem_data_0_V_read(tmp_data_0_V_reg_654),
    .in_elem_data_1_V_read(tmp_data_1_V_reg_659),
    .in_elem_data_2_V_read(tmp_data_2_V_reg_664),
    .in_elem_data_3_V_read(tmp_data_3_V_reg_669),
    .kernel_window_4_V_read(kernel_data_V_7_4),
    .kernel_window_5_V_read(kernel_data_V_7_5),
    .kernel_window_6_V_read(kernel_data_V_7_6),
    .kernel_window_7_V_read(kernel_data_V_7_7),
    .kernel_window_12_V_read(kernel_data_V_7_12),
    .kernel_window_13_V_read(kernel_data_V_7_13),
    .kernel_window_14_V_read(kernel_data_V_7_14),
    .kernel_window_15_V_read(kernel_data_V_7_15),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_15),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_321)) begin
        if ((1'b1 == ap_condition_330)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_135 <= 32'd0;
        end else if ((1'b1 == ap_condition_326)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_135 <= select_ln213_reg_811;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_135 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_135;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_124 <= add_ln233_reg_649;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_124 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_311)) begin
        if ((icmp_ln203_fu_456_p2 == 1'd1)) begin
            pX_5 <= 32'd0;
        end else if ((icmp_ln203_fu_456_p2 == 1'd0)) begin
            pX_5 <= add_ln216_fu_462_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_886)) begin
            pY_5 <= 32'd0;
        end else if ((1'b1 == ap_condition_235)) begin
            pY_5 <= add_ln211_fu_506_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_891)) begin
            sX_5 <= select_ln218_reg_802;
        end else if ((1'b1 == ap_condition_229)) begin
            sX_5 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln233_reg_649 <= add_ln233_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln185_6_reg_754 <= and_ln185_6_fu_402_p2;
        pool_window_0_V_10_reg_694 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_3;
        pool_window_0_V_2_reg_699 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_2;
        pool_window_0_V_3_reg_709 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_0;
        pool_window_0_V_reg_704 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_1;
        pool_window_1_V_10_reg_714 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_8;
        pool_window_1_V_2_reg_724 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_10;
        pool_window_1_V_3_reg_729 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_11;
        pool_window_1_V_reg_719 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_9;
        pool_window_2_V_10_reg_674 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_7;
        pool_window_2_V_2_reg_679 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_6;
        pool_window_2_V_3_reg_689 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_4;
        pool_window_2_V_reg_684 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_5;
        pool_window_3_V_10_reg_734 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_12;
        pool_window_3_V_2_reg_744 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_14;
        pool_window_3_V_3_reg_749 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_15;
        pool_window_3_V_reg_739 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_135 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_135;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_fu_402_p2))) begin
        icmp_ln1496_35_reg_763 <= icmp_ln1496_35_fu_414_p2;
        icmp_ln1496_37_reg_768 <= icmp_ln1496_37_fu_420_p2;
        icmp_ln1496_38_reg_773 <= icmp_ln1496_38_fu_426_p2;
        icmp_ln1496_40_reg_778 <= icmp_ln1496_40_fu_432_p2;
        icmp_ln1496_41_reg_783 <= icmp_ln1496_41_fu_438_p2;
        icmp_ln1496_43_reg_788 <= icmp_ln1496_43_fu_444_p2;
        icmp_ln1496_44_reg_793 <= icmp_ln1496_44_fu_450_p2;
        icmp_ln1496_reg_758 <= icmp_ln1496_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln203_reg_798 <= icmp_ln203_fu_456_p2;
        icmp_ln233_reg_645 <= icmp_ln233_fu_170_p2;
        icmp_ln233_reg_645_pp0_iter1_reg <= icmp_ln233_reg_645;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_456_p2 == 1'd1))) begin
        icmp_ln207_reg_807 <= icmp_ln207_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_7_12 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_12;
        kernel_data_V_7_13 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_13;
        kernel_data_V_7_14 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_14;
        kernel_data_V_7_15 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_15;
        kernel_data_V_7_4 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_8;
        kernel_data_V_7_5 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_9;
        kernel_data_V_7_6 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_10;
        kernel_data_V_7_7 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_11;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_reg_798 == 1'd1))) begin
        sY_5 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_135;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln207_fu_500_p2 == 1'd0) & (icmp_ln233_reg_645 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_456_p2 == 1'd1))) begin
        select_ln213_reg_811 <= select_ln213_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln203_fu_456_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln218_reg_802 <= select_ln218_fu_480_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln185_6_reg_754))) begin
        tmp_data_0_V_34_reg_816 <= tmp_data_0_V_34_fu_548_p3;
        tmp_data_1_V_32_reg_821 <= tmp_data_1_V_32_fu_572_p3;
        tmp_data_2_V_32_reg_826 <= tmp_data_2_V_32_fu_596_p3;
        tmp_data_3_V_32_reg_831 <= tmp_data_3_V_32_fu_620_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_data_0_V_reg_654 <= data_V_data_0_V_dout;
        tmp_data_1_V_reg_659 <= data_V_data_1_V_dout;
        tmp_data_2_V_reg_664 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_669 <= data_V_data_3_V_dout;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_170_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_128_p4 = add_ln233_reg_649;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_128_p4 = indvar_flatten_reg_124;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln203_reg_798 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_sY_5_load = ap_phi_reg_pp0_iter2_storemerge_i_i_reg_135;
    end else begin
        ap_sig_allocacmp_sY_5_load = sY_5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp34) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_645 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_6_reg_754) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_754))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_6_reg_754) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_754))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_6_reg_754) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_754))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_6_reg_754) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_6_reg_754))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_fu_170_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_fu_170_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_506_p2 = (pY_5 + 32'd1);

assign add_ln213_fu_518_p2 = (ap_sig_allocacmp_sY_5_load + 32'd1);

assign add_ln216_fu_462_p2 = (pX_5 + 32'd1);

assign add_ln218_fu_474_p2 = (sX_5 + 32'd1);

assign add_ln233_fu_176_p2 = (ap_phi_mux_indvar_flatten_phi_fu_128_p4 + 7'd1);

assign and_ln185_5_fu_396_p2 = (icmp_ln185_9_fu_384_p2 & icmp_ln185_8_fu_374_p2);

assign and_ln185_6_fu_402_p2 = (and_ln185_fu_390_p2 & and_ln185_5_fu_396_p2);

assign and_ln185_fu_390_p2 = (icmp_ln185_fu_354_p2 & icmp_ln185_7_fu_364_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((io_acc_block_signal_op119 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_6_reg_754));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op119 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_6_reg_754));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp34 = ((io_acc_block_signal_op119 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_6_reg_754));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op119 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_6_reg_754));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln233_reg_645 == 1'd0) & (io_acc_block_signal_op21 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln233_reg_645 == 1'd0) & (io_acc_block_signal_op21 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln233_reg_645 == 1'd0) & (io_acc_block_signal_op21 == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((io_acc_block_signal_op119 == 1'b0) & (1'd1 == and_ln185_6_reg_754));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2_ignore_call18 = ((io_acc_block_signal_op119 == 1'b0) & (1'd1 == and_ln185_6_reg_754));
end

always @ (*) begin
    ap_condition_229 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_456_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_235 = ((icmp_ln207_fu_500_p2 == 1'd0) & (icmp_ln233_reg_645 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_456_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_311 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_321 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_326 = ((icmp_ln207_reg_807 == 1'd0) & (icmp_ln233_reg_645_pp0_iter1_reg == 1'd0) & (icmp_ln203_reg_798 == 1'd1));
end

always @ (*) begin
    ap_condition_330 = ((icmp_ln233_reg_645_pp0_iter1_reg == 1'd0) & (icmp_ln207_reg_807 == 1'd1) & (icmp_ln203_reg_798 == 1'd1));
end

always @ (*) begin
    ap_condition_886 = ((icmp_ln233_reg_645_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln207_reg_807 == 1'd1) & (icmp_ln203_reg_798 == 1'd1));
end

always @ (*) begin
    ap_condition_891 = ((icmp_ln203_reg_798 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_135 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start = call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_start_reg;

assign icmp_ln1496_35_fu_414_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_4) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_12)) ? 1'b1 : 1'b0);

assign icmp_ln1496_36_fu_542_p2 = (($signed(select_ln86_fu_532_p3) < $signed(select_ln86_35_fu_537_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_37_fu_420_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_1) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_9)) ? 1'b1 : 1'b0);

assign icmp_ln1496_38_fu_426_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_5) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_13)) ? 1'b1 : 1'b0);

assign icmp_ln1496_39_fu_566_p2 = (($signed(select_ln86_37_fu_556_p3) < $signed(select_ln86_38_fu_561_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_40_fu_432_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_2) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_10)) ? 1'b1 : 1'b0);

assign icmp_ln1496_41_fu_438_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_6) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_14)) ? 1'b1 : 1'b0);

assign icmp_ln1496_42_fu_590_p2 = (($signed(select_ln86_40_fu_580_p3) < $signed(select_ln86_41_fu_585_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_43_fu_444_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_3) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_11)) ? 1'b1 : 1'b0);

assign icmp_ln1496_44_fu_450_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_7) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_15)) ? 1'b1 : 1'b0);

assign icmp_ln1496_45_fu_614_p2 = (($signed(select_ln86_43_fu_604_p3) < $signed(select_ln86_44_fu_609_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_408_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_0) < $signed(call_ret_shift_line_buffer_array_ap_fixed_4u_config10_s_fu_146_ap_return_8)) ? 1'b1 : 1'b0);

assign icmp_ln185_7_fu_364_p2 = ((ap_sig_allocacmp_sY_5_load == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln185_8_fu_374_p2 = (($signed(pY_5) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_9_fu_384_p2 = (($signed(pX_5) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_354_p2 = ((sX_5 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_456_p2 = ((pX_5 == 32'd7) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_500_p2 = ((pY_5 == 32'd7) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_170_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_128_p4 == 7'd64) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op119 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op21 = (data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign res_V_data_0_V_din = tmp_data_0_V_34_reg_816;

assign res_V_data_1_V_din = tmp_data_1_V_32_reg_821;

assign res_V_data_2_V_din = tmp_data_2_V_32_reg_826;

assign res_V_data_3_V_din = tmp_data_3_V_32_reg_831;

assign select_ln213_fu_524_p3 = ((icmp_ln185_7_fu_364_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_518_p2);

assign select_ln218_fu_480_p3 = ((icmp_ln185_fu_354_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_474_p2);

assign select_ln86_35_fu_537_p3 = ((icmp_ln1496_35_reg_763[0:0] === 1'b1) ? pool_window_3_V_10_reg_734 : pool_window_2_V_3_reg_689);

assign select_ln86_37_fu_556_p3 = ((icmp_ln1496_37_reg_768[0:0] === 1'b1) ? pool_window_1_V_reg_719 : pool_window_0_V_reg_704);

assign select_ln86_38_fu_561_p3 = ((icmp_ln1496_38_reg_773[0:0] === 1'b1) ? pool_window_3_V_reg_739 : pool_window_2_V_reg_684);

assign select_ln86_40_fu_580_p3 = ((icmp_ln1496_40_reg_778[0:0] === 1'b1) ? pool_window_1_V_2_reg_724 : pool_window_0_V_2_reg_699);

assign select_ln86_41_fu_585_p3 = ((icmp_ln1496_41_reg_783[0:0] === 1'b1) ? pool_window_3_V_2_reg_744 : pool_window_2_V_2_reg_679);

assign select_ln86_43_fu_604_p3 = ((icmp_ln1496_43_reg_788[0:0] === 1'b1) ? pool_window_1_V_3_reg_729 : pool_window_0_V_10_reg_694);

assign select_ln86_44_fu_609_p3 = ((icmp_ln1496_44_reg_793[0:0] === 1'b1) ? pool_window_3_V_3_reg_749 : pool_window_2_V_10_reg_674);

assign select_ln86_fu_532_p3 = ((icmp_ln1496_reg_758[0:0] === 1'b1) ? pool_window_1_V_10_reg_714 : pool_window_0_V_3_reg_709);

assign start_out = real_start;

assign tmp_data_0_V_34_fu_548_p3 = ((icmp_ln1496_36_fu_542_p2[0:0] === 1'b1) ? select_ln86_35_fu_537_p3 : select_ln86_fu_532_p3);

assign tmp_data_1_V_32_fu_572_p3 = ((icmp_ln1496_39_fu_566_p2[0:0] === 1'b1) ? select_ln86_38_fu_561_p3 : select_ln86_37_fu_556_p3);

assign tmp_data_2_V_32_fu_596_p3 = ((icmp_ln1496_42_fu_590_p2[0:0] === 1'b1) ? select_ln86_41_fu_585_p3 : select_ln86_40_fu_580_p3);

assign tmp_data_3_V_32_fu_620_p3 = ((icmp_ln1496_45_fu_614_p2[0:0] === 1'b1) ? select_ln86_44_fu_609_p3 : select_ln86_43_fu_604_p3);

endmodule //pooling2d_cl_array_array_ap_fixed_4u_config10_s
