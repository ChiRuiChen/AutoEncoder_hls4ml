// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_4u_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_pp0_stage0 = 6'd8;
parameter    ap_ST_fsm_state12 = 6'd16;
parameter    ap_ST_fsm_state13 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [31:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [31:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [31:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [31:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [31:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [31:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [31:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
output  [31:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [31:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [31:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [31:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] kernel_data_V_6_0;
reg   [31:0] kernel_data_V_6_1;
reg   [31:0] kernel_data_V_6_2;
reg   [31:0] kernel_data_V_6_3;
reg   [31:0] kernel_data_V_6_4;
reg   [31:0] kernel_data_V_6_5;
reg   [31:0] kernel_data_V_6_6;
reg   [31:0] kernel_data_V_6_7;
reg   [31:0] kernel_data_V_6_8;
reg   [31:0] kernel_data_V_6_9;
reg   [31:0] kernel_data_V_6_10;
reg   [31:0] kernel_data_V_6_11;
reg   [31:0] kernel_data_V_6_12;
reg   [31:0] kernel_data_V_6_13;
reg   [31:0] kernel_data_V_6_14;
reg   [31:0] kernel_data_V_6_15;
reg   [31:0] kernel_data_V_6_16;
reg   [31:0] kernel_data_V_6_17;
reg   [31:0] kernel_data_V_6_18;
reg   [31:0] kernel_data_V_6_19;
reg   [31:0] kernel_data_V_6_20;
reg   [31:0] kernel_data_V_6_21;
reg   [31:0] kernel_data_V_6_22;
reg   [31:0] kernel_data_V_6_23;
reg   [31:0] kernel_data_V_6_24;
reg   [31:0] kernel_data_V_6_25;
reg   [31:0] kernel_data_V_6_26;
reg   [31:0] kernel_data_V_6_27;
reg   [31:0] kernel_data_V_6_28;
reg   [31:0] kernel_data_V_6_29;
reg   [31:0] kernel_data_V_6_30;
reg   [31:0] kernel_data_V_6_31;
reg   [31:0] kernel_data_V_6_32;
reg   [31:0] kernel_data_V_6_33;
reg   [31:0] kernel_data_V_6_34;
reg   [31:0] kernel_data_V_6_35;
reg   [31:0] kernel_data_V_6_36;
reg   [31:0] kernel_data_V_6_37;
reg   [31:0] kernel_data_V_6_38;
reg   [31:0] kernel_data_V_6_39;
reg   [31:0] kernel_data_V_6_40;
reg   [31:0] kernel_data_V_6_41;
reg   [31:0] kernel_data_V_6_42;
reg   [31:0] kernel_data_V_6_43;
reg   [31:0] kernel_data_V_6_44;
reg   [31:0] kernel_data_V_6_45;
reg   [31:0] kernel_data_V_6_46;
reg   [31:0] kernel_data_V_6_47;
reg   [31:0] kernel_data_V_6_48;
reg   [31:0] kernel_data_V_6_49;
reg   [31:0] kernel_data_V_6_50;
reg   [31:0] kernel_data_V_6_51;
reg   [31:0] kernel_data_V_6_52;
reg   [31:0] kernel_data_V_6_53;
reg   [31:0] kernel_data_V_6_54;
reg   [31:0] kernel_data_V_6_55;
reg   [31:0] kernel_data_V_6_56;
reg   [31:0] kernel_data_V_6_57;
reg   [31:0] kernel_data_V_6_58;
reg   [31:0] kernel_data_V_6_59;
reg   [31:0] kernel_data_V_6_60;
reg   [31:0] kernel_data_V_6_61;
reg   [31:0] kernel_data_V_6_62;
reg   [31:0] kernel_data_V_6_63;
reg   [31:0] kernel_data_V_6_64;
reg   [31:0] kernel_data_V_6_65;
reg   [31:0] kernel_data_V_6_66;
reg   [31:0] kernel_data_V_6_67;
reg   [31:0] kernel_data_V_6_68;
reg   [31:0] kernel_data_V_6_69;
reg   [31:0] kernel_data_V_6_70;
reg   [31:0] kernel_data_V_6_71;
wire   [6:0] w5_V_address0;
reg    w5_V_ce0;
wire   [112:0] w5_V_q0;
reg   [31:0] pX_6;
reg   [31:0] sX_6;
reg   [31:0] pY_6;
reg   [31:0] sY_6;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_state2;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state12;
reg   [0:0] and_ln272_2_reg_2161;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [6:0] w_index14_reg_367;
reg   [31:0] res_out_0_V12_reg_379;
reg   [31:0] res_out_1_V10_reg_390;
reg   [31:0] res_out_2_V8_reg_401;
reg   [31:0] tmp_data_3_V_676_reg_412;
reg   [31:0] tmp_data_0_V_reg_2089;
wire    io_acc_block_signal_op27;
reg   [31:0] tmp_data_1_V_reg_2094;
reg   [31:0] tmp_data_2_V_reg_2099;
reg   [31:0] tmp_data_3_V_reg_2104;
reg   [31:0] tmp_data_4_V_reg_2109;
reg   [31:0] tmp_data_5_V_reg_2114;
reg   [31:0] tmp_data_6_V_reg_2119;
reg   [31:0] tmp_data_7_V_reg_2124;
reg   [31:0] sX_6_load_reg_2129;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln272_fu_1522_p2;
reg   [0:0] icmp_ln272_reg_2134;
reg   [31:0] sY_6_load_reg_2139;
wire   [0:0] icmp_ln272_1_fu_1532_p2;
reg   [0:0] icmp_ln272_1_reg_2144;
reg   [31:0] pY_6_load_reg_2149;
reg   [31:0] pX_6_load_reg_2155;
wire   [0:0] and_ln272_2_fu_1590_p2;
wire   [8:0] add_ln78_fu_1596_p2;
reg   [8:0] add_ln78_reg_2165;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] w_index_fu_1607_p2;
reg   [6:0] w_index_reg_2175;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln64_fu_1613_p2;
reg   [0:0] icmp_ln64_reg_2180;
reg   [0:0] icmp_ln64_reg_2180_pp0_iter1_reg;
reg   [0:0] icmp_ln64_reg_2180_pp0_iter2_reg;
reg   [0:0] icmp_ln64_reg_2180_pp0_iter3_reg;
reg   [0:0] icmp_ln64_reg_2180_pp0_iter4_reg;
reg   [0:0] icmp_ln64_reg_2180_pp0_iter5_reg;
reg   [0:0] icmp_ln64_reg_2180_pp0_iter6_reg;
wire   [31:0] tmp_1_fu_1715_p74;
reg   [31:0] tmp_1_reg_2184;
wire   [31:0] trunc_ln76_fu_1865_p1;
reg  signed [31:0] trunc_ln76_reg_2189;
reg  signed [31:0] tmp_3_reg_2194;
reg  signed [31:0] tmp_4_reg_2199;
reg  signed [16:0] tmp_5_reg_2204;
wire  signed [47:0] sext_ln1116_cast_fu_1899_p1;
reg   [31:0] trunc_ln_reg_2237;
reg   [31:0] trunc_ln708_1_reg_2242;
reg   [31:0] trunc_ln708_2_reg_2247;
reg   [31:0] trunc_ln708_3_reg_2252;
wire   [31:0] acc_0_V_fu_1978_p2;
reg   [31:0] acc_0_V_reg_2257;
reg    ap_enable_reg_pp0_iter7;
wire   [31:0] acc_1_V_fu_1983_p2;
reg   [31:0] acc_1_V_reg_2263;
wire   [31:0] acc_2_V_fu_1988_p2;
reg   [31:0] acc_2_V_reg_2269;
wire   [31:0] acc_3_V_fu_1993_p2;
reg   [31:0] acc_3_V_reg_2275;
wire   [0:0] icmp_ln293_fu_1998_p2;
reg   [0:0] icmp_ln293_reg_2281;
wire    io_acc_block_signal_op378;
reg    ap_block_state12;
wire   [31:0] select_ln308_fu_2019_p3;
reg   [31:0] select_ln308_reg_2285;
wire   [0:0] icmp_ln297_fu_2038_p2;
reg   [0:0] icmp_ln297_reg_2290;
wire   [31:0] select_ln303_fu_2059_p3;
reg   [31:0] select_ln303_reg_2294;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_ready;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_0;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_1;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_2;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_3;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_4;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_5;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_6;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_7;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_8;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_9;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_10;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_11;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_12;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_13;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_14;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_15;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_16;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_17;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_18;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_19;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_20;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_21;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_22;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_23;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_24;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_25;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_26;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_27;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_28;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_29;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_30;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_31;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_32;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_33;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_34;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_35;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_36;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_37;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_38;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_39;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_40;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_41;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_42;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_43;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_44;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_45;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_46;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_47;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_48;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_49;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_50;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_51;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_52;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_53;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_54;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_55;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_56;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_57;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_58;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_59;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_60;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_61;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_62;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_63;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_64;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_65;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_66;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_67;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_68;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_69;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_70;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_71;
reg   [8:0] indvar_flatten15_reg_355;
reg    ap_block_state1;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln78_fu_2083_p2;
reg   [6:0] ap_phi_mux_w_index14_phi_fu_371_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_427_p4;
reg   [31:0] storemerge_i_i_reg_423;
wire   [63:0] zext_ln76_fu_1602_p1;
wire   [31:0] add_ln306_fu_2003_p2;
wire   [31:0] add_ln301_fu_2043_p2;
wire   [30:0] tmp_fu_1542_p4;
wire   [30:0] tmp_6_fu_1562_p4;
wire   [0:0] icmp_ln272_10_fu_1552_p2;
wire   [0:0] icmp_ln272_11_fu_1572_p2;
wire   [0:0] and_ln272_1_fu_1584_p2;
wire   [0:0] and_ln272_fu_1578_p2;
wire  signed [31:0] grp_fu_1905_p1;
wire  signed [31:0] grp_fu_1914_p1;
wire  signed [31:0] grp_fu_1923_p1;
wire  signed [31:0] grp_fu_1932_p0;
wire   [47:0] grp_fu_1905_p2;
wire   [47:0] grp_fu_1914_p2;
wire   [47:0] grp_fu_1923_p2;
wire   [47:0] grp_fu_1932_p2;
wire   [31:0] add_ln308_fu_2014_p2;
wire   [31:0] add_ln303_fu_2054_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_352;
reg    ap_condition_361;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_6_0 = 32'd0;
#0 kernel_data_V_6_1 = 32'd0;
#0 kernel_data_V_6_2 = 32'd0;
#0 kernel_data_V_6_3 = 32'd0;
#0 kernel_data_V_6_4 = 32'd0;
#0 kernel_data_V_6_5 = 32'd0;
#0 kernel_data_V_6_6 = 32'd0;
#0 kernel_data_V_6_7 = 32'd0;
#0 kernel_data_V_6_8 = 32'd0;
#0 kernel_data_V_6_9 = 32'd0;
#0 kernel_data_V_6_10 = 32'd0;
#0 kernel_data_V_6_11 = 32'd0;
#0 kernel_data_V_6_12 = 32'd0;
#0 kernel_data_V_6_13 = 32'd0;
#0 kernel_data_V_6_14 = 32'd0;
#0 kernel_data_V_6_15 = 32'd0;
#0 kernel_data_V_6_16 = 32'd0;
#0 kernel_data_V_6_17 = 32'd0;
#0 kernel_data_V_6_18 = 32'd0;
#0 kernel_data_V_6_19 = 32'd0;
#0 kernel_data_V_6_20 = 32'd0;
#0 kernel_data_V_6_21 = 32'd0;
#0 kernel_data_V_6_22 = 32'd0;
#0 kernel_data_V_6_23 = 32'd0;
#0 kernel_data_V_6_24 = 32'd0;
#0 kernel_data_V_6_25 = 32'd0;
#0 kernel_data_V_6_26 = 32'd0;
#0 kernel_data_V_6_27 = 32'd0;
#0 kernel_data_V_6_28 = 32'd0;
#0 kernel_data_V_6_29 = 32'd0;
#0 kernel_data_V_6_30 = 32'd0;
#0 kernel_data_V_6_31 = 32'd0;
#0 kernel_data_V_6_32 = 32'd0;
#0 kernel_data_V_6_33 = 32'd0;
#0 kernel_data_V_6_34 = 32'd0;
#0 kernel_data_V_6_35 = 32'd0;
#0 kernel_data_V_6_36 = 32'd0;
#0 kernel_data_V_6_37 = 32'd0;
#0 kernel_data_V_6_38 = 32'd0;
#0 kernel_data_V_6_39 = 32'd0;
#0 kernel_data_V_6_40 = 32'd0;
#0 kernel_data_V_6_41 = 32'd0;
#0 kernel_data_V_6_42 = 32'd0;
#0 kernel_data_V_6_43 = 32'd0;
#0 kernel_data_V_6_44 = 32'd0;
#0 kernel_data_V_6_45 = 32'd0;
#0 kernel_data_V_6_46 = 32'd0;
#0 kernel_data_V_6_47 = 32'd0;
#0 kernel_data_V_6_48 = 32'd0;
#0 kernel_data_V_6_49 = 32'd0;
#0 kernel_data_V_6_50 = 32'd0;
#0 kernel_data_V_6_51 = 32'd0;
#0 kernel_data_V_6_52 = 32'd0;
#0 kernel_data_V_6_53 = 32'd0;
#0 kernel_data_V_6_54 = 32'd0;
#0 kernel_data_V_6_55 = 32'd0;
#0 kernel_data_V_6_56 = 32'd0;
#0 kernel_data_V_6_57 = 32'd0;
#0 kernel_data_V_6_58 = 32'd0;
#0 kernel_data_V_6_59 = 32'd0;
#0 kernel_data_V_6_60 = 32'd0;
#0 kernel_data_V_6_61 = 32'd0;
#0 kernel_data_V_6_62 = 32'd0;
#0 kernel_data_V_6_63 = 32'd0;
#0 kernel_data_V_6_64 = 32'd0;
#0 kernel_data_V_6_65 = 32'd0;
#0 kernel_data_V_6_66 = 32'd0;
#0 kernel_data_V_6_67 = 32'd0;
#0 kernel_data_V_6_68 = 32'd0;
#0 kernel_data_V_6_69 = 32'd0;
#0 kernel_data_V_6_70 = 32'd0;
#0 kernel_data_V_6_71 = 32'd0;
#0 pX_6 = 32'd0;
#0 sX_6 = 32'd0;
#0 pY_6 = 32'd0;
#0 sY_6 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

conv_2d_cl_array_array_ap_fixed_4u_config5_s_w5_V #(
    .DataWidth( 113 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
w5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w5_V_address0),
    .ce0(w5_V_ce0),
    .q0(w5_V_q0)
);

shift_line_buffer_array_ap_fixed_8u_config5_s call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_ready),
    .in_elem_data_0_V_read(tmp_data_0_V_reg_2089),
    .in_elem_data_1_V_read(tmp_data_1_V_reg_2094),
    .in_elem_data_2_V_read(tmp_data_2_V_reg_2099),
    .in_elem_data_3_V_read(tmp_data_3_V_reg_2104),
    .in_elem_data_4_V_read(tmp_data_4_V_reg_2109),
    .in_elem_data_5_V_read(tmp_data_5_V_reg_2114),
    .in_elem_data_6_V_read(tmp_data_6_V_reg_2119),
    .in_elem_data_7_V_read(tmp_data_7_V_reg_2124),
    .kernel_window_8_V_read(kernel_data_V_6_8),
    .kernel_window_9_V_read(kernel_data_V_6_9),
    .kernel_window_10_V_read(kernel_data_V_6_10),
    .kernel_window_11_V_read(kernel_data_V_6_11),
    .kernel_window_12_V_read(kernel_data_V_6_12),
    .kernel_window_13_V_read(kernel_data_V_6_13),
    .kernel_window_14_V_read(kernel_data_V_6_14),
    .kernel_window_15_V_read(kernel_data_V_6_15),
    .kernel_window_16_V_read(kernel_data_V_6_16),
    .kernel_window_17_V_read(kernel_data_V_6_17),
    .kernel_window_18_V_read(kernel_data_V_6_18),
    .kernel_window_19_V_read(kernel_data_V_6_19),
    .kernel_window_20_V_read(kernel_data_V_6_20),
    .kernel_window_21_V_read(kernel_data_V_6_21),
    .kernel_window_22_V_read(kernel_data_V_6_22),
    .kernel_window_23_V_read(kernel_data_V_6_23),
    .kernel_window_32_V_read(kernel_data_V_6_32),
    .kernel_window_33_V_read(kernel_data_V_6_33),
    .kernel_window_34_V_read(kernel_data_V_6_34),
    .kernel_window_35_V_read(kernel_data_V_6_35),
    .kernel_window_36_V_read(kernel_data_V_6_36),
    .kernel_window_37_V_read(kernel_data_V_6_37),
    .kernel_window_38_V_read(kernel_data_V_6_38),
    .kernel_window_39_V_read(kernel_data_V_6_39),
    .kernel_window_40_V_read(kernel_data_V_6_40),
    .kernel_window_41_V_read(kernel_data_V_6_41),
    .kernel_window_42_V_read(kernel_data_V_6_42),
    .kernel_window_43_V_read(kernel_data_V_6_43),
    .kernel_window_44_V_read(kernel_data_V_6_44),
    .kernel_window_45_V_read(kernel_data_V_6_45),
    .kernel_window_46_V_read(kernel_data_V_6_46),
    .kernel_window_47_V_read(kernel_data_V_6_47),
    .kernel_window_56_V_read(kernel_data_V_6_56),
    .kernel_window_57_V_read(kernel_data_V_6_57),
    .kernel_window_58_V_read(kernel_data_V_6_58),
    .kernel_window_59_V_read(kernel_data_V_6_59),
    .kernel_window_60_V_read(kernel_data_V_6_60),
    .kernel_window_61_V_read(kernel_data_V_6_61),
    .kernel_window_62_V_read(kernel_data_V_6_62),
    .kernel_window_63_V_read(kernel_data_V_6_63),
    .kernel_window_64_V_read(kernel_data_V_6_64),
    .kernel_window_65_V_read(kernel_data_V_6_65),
    .kernel_window_66_V_read(kernel_data_V_6_66),
    .kernel_window_67_V_read(kernel_data_V_6_67),
    .kernel_window_68_V_read(kernel_data_V_6_68),
    .kernel_window_69_V_read(kernel_data_V_6_69),
    .kernel_window_70_V_read(kernel_data_V_6_70),
    .kernel_window_71_V_read(kernel_data_V_6_71),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_15),
    .ap_return_16(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_16),
    .ap_return_17(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_17),
    .ap_return_18(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_18),
    .ap_return_19(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_19),
    .ap_return_20(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_20),
    .ap_return_21(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_21),
    .ap_return_22(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_22),
    .ap_return_23(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_23),
    .ap_return_24(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_24),
    .ap_return_25(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_25),
    .ap_return_26(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_26),
    .ap_return_27(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_27),
    .ap_return_28(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_28),
    .ap_return_29(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_29),
    .ap_return_30(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_30),
    .ap_return_31(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_31),
    .ap_return_32(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_32),
    .ap_return_33(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_33),
    .ap_return_34(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_34),
    .ap_return_35(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_35),
    .ap_return_36(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_36),
    .ap_return_37(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_37),
    .ap_return_38(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_38),
    .ap_return_39(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_39),
    .ap_return_40(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_40),
    .ap_return_41(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_41),
    .ap_return_42(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_42),
    .ap_return_43(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_43),
    .ap_return_44(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_44),
    .ap_return_45(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_45),
    .ap_return_46(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_46),
    .ap_return_47(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_47),
    .ap_return_48(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_48),
    .ap_return_49(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_49),
    .ap_return_50(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_50),
    .ap_return_51(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_51),
    .ap_return_52(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_52),
    .ap_return_53(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_53),
    .ap_return_54(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_54),
    .ap_return_55(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_55),
    .ap_return_56(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_56),
    .ap_return_57(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_57),
    .ap_return_58(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_58),
    .ap_return_59(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_59),
    .ap_return_60(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_60),
    .ap_return_61(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_61),
    .ap_return_62(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_62),
    .ap_return_63(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_63),
    .ap_return_64(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_64),
    .ap_return_65(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_65),
    .ap_return_66(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_66),
    .ap_return_67(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_67),
    .ap_return_68(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_68),
    .ap_return_69(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_69),
    .ap_return_70(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_70),
    .ap_return_71(call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_71)
);

myproject_axi_mux_727_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 32 ),
    .din65_WIDTH( 32 ),
    .din66_WIDTH( 32 ),
    .din67_WIDTH( 32 ),
    .din68_WIDTH( 32 ),
    .din69_WIDTH( 32 ),
    .din70_WIDTH( 32 ),
    .din71_WIDTH( 32 ),
    .din72_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
myproject_axi_mux_727_32_1_1_U172(
    .din0(kernel_data_V_6_0),
    .din1(kernel_data_V_6_1),
    .din2(kernel_data_V_6_2),
    .din3(kernel_data_V_6_3),
    .din4(kernel_data_V_6_4),
    .din5(kernel_data_V_6_5),
    .din6(kernel_data_V_6_6),
    .din7(kernel_data_V_6_7),
    .din8(kernel_data_V_6_8),
    .din9(kernel_data_V_6_9),
    .din10(kernel_data_V_6_10),
    .din11(kernel_data_V_6_11),
    .din12(kernel_data_V_6_12),
    .din13(kernel_data_V_6_13),
    .din14(kernel_data_V_6_14),
    .din15(kernel_data_V_6_15),
    .din16(kernel_data_V_6_16),
    .din17(kernel_data_V_6_17),
    .din18(kernel_data_V_6_18),
    .din19(kernel_data_V_6_19),
    .din20(kernel_data_V_6_20),
    .din21(kernel_data_V_6_21),
    .din22(kernel_data_V_6_22),
    .din23(kernel_data_V_6_23),
    .din24(kernel_data_V_6_24),
    .din25(kernel_data_V_6_25),
    .din26(kernel_data_V_6_26),
    .din27(kernel_data_V_6_27),
    .din28(kernel_data_V_6_28),
    .din29(kernel_data_V_6_29),
    .din30(kernel_data_V_6_30),
    .din31(kernel_data_V_6_31),
    .din32(kernel_data_V_6_32),
    .din33(kernel_data_V_6_33),
    .din34(kernel_data_V_6_34),
    .din35(kernel_data_V_6_35),
    .din36(kernel_data_V_6_36),
    .din37(kernel_data_V_6_37),
    .din38(kernel_data_V_6_38),
    .din39(kernel_data_V_6_39),
    .din40(kernel_data_V_6_40),
    .din41(kernel_data_V_6_41),
    .din42(kernel_data_V_6_42),
    .din43(kernel_data_V_6_43),
    .din44(kernel_data_V_6_44),
    .din45(kernel_data_V_6_45),
    .din46(kernel_data_V_6_46),
    .din47(kernel_data_V_6_47),
    .din48(kernel_data_V_6_48),
    .din49(kernel_data_V_6_49),
    .din50(kernel_data_V_6_50),
    .din51(kernel_data_V_6_51),
    .din52(kernel_data_V_6_52),
    .din53(kernel_data_V_6_53),
    .din54(kernel_data_V_6_54),
    .din55(kernel_data_V_6_55),
    .din56(kernel_data_V_6_56),
    .din57(kernel_data_V_6_57),
    .din58(kernel_data_V_6_58),
    .din59(kernel_data_V_6_59),
    .din60(kernel_data_V_6_60),
    .din61(kernel_data_V_6_61),
    .din62(kernel_data_V_6_62),
    .din63(kernel_data_V_6_63),
    .din64(kernel_data_V_6_64),
    .din65(kernel_data_V_6_65),
    .din66(kernel_data_V_6_66),
    .din67(kernel_data_V_6_67),
    .din68(kernel_data_V_6_68),
    .din69(kernel_data_V_6_69),
    .din70(kernel_data_V_6_70),
    .din71(kernel_data_V_6_71),
    .din72(w_index14_reg_367),
    .dout(tmp_1_fu_1715_p74)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U173(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln76_reg_2189),
    .din1(grp_fu_1905_p1),
    .ce(1'b1),
    .dout(grp_fu_1905_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_2194),
    .din1(grp_fu_1914_p1),
    .ce(1'b1),
    .dout(grp_fu_1914_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_2199),
    .din1(grp_fu_1923_p1),
    .ce(1'b1),
    .dout(grp_fu_1923_p2)
);

myproject_axi_mul_32s_17s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_17s_48_5_1_U176(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1932_p0),
    .din1(tmp_5_reg_2204),
    .ce(1'b1),
    .dout(grp_fu_1932_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_2083_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_1613_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_2083_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        indvar_flatten15_reg_355 <= add_ln78_reg_2165;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten15_reg_355 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_352)) begin
        if ((icmp_ln293_fu_1998_p2 == 1'd1)) begin
            pX_6 <= 32'd0;
        end else if ((icmp_ln293_fu_1998_p2 == 1'd0)) begin
            pX_6 <= add_ln306_fu_2003_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_361)) begin
        if ((icmp_ln297_fu_2038_p2 == 1'd1)) begin
            pY_6 <= 32'd0;
        end else if ((icmp_ln297_fu_2038_p2 == 1'd0)) begin
            pY_6 <= add_ln301_fu_2043_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2180_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        res_out_0_V12_reg_379 <= acc_0_V_fu_1978_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
        res_out_0_V12_reg_379 <= 32'd4655;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2180_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        res_out_1_V10_reg_390 <= acc_1_V_fu_1983_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
        res_out_1_V10_reg_390 <= 32'd4294961561;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2180_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        res_out_2_V8_reg_401 <= acc_2_V_fu_1988_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
        res_out_2_V8_reg_401 <= 32'd355;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_reg_2281 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        sX_6 <= select_ln308_reg_2285;
    end else if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1998_p2 == 1'd1))) begin
        sX_6 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln297_fu_2038_p2 == 1'd1) & (icmp_ln293_fu_1998_p2 == 1'd1))) begin
        storemerge_i_i_reg_423 <= 32'd0;
    end else if (((icmp_ln297_reg_2290 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln293_reg_2281 == 1'd1))) begin
        storemerge_i_i_reg_423 <= select_ln303_reg_2294;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2180_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        tmp_data_3_V_676_reg_412 <= acc_3_V_fu_1993_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
        tmp_data_3_V_676_reg_412 <= 32'd541;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2180 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index14_reg_367 <= w_index_reg_2175;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
        w_index14_reg_367 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_0_V_reg_2257 <= acc_0_V_fu_1978_p2;
        acc_1_V_reg_2263 <= acc_1_V_fu_1983_p2;
        acc_2_V_reg_2269 <= acc_2_V_fu_1988_p2;
        acc_3_V_reg_2275 <= acc_3_V_fu_1993_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln78_reg_2165 <= add_ln78_fu_1596_p2;
        and_ln272_2_reg_2161 <= and_ln272_2_fu_1590_p2;
        icmp_ln272_1_reg_2144 <= icmp_ln272_1_fu_1532_p2;
        icmp_ln272_reg_2134 <= icmp_ln272_fu_1522_p2;
        kernel_data_V_6_0 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_0;
        kernel_data_V_6_1 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_1;
        kernel_data_V_6_10 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_26;
        kernel_data_V_6_11 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_27;
        kernel_data_V_6_12 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_28;
        kernel_data_V_6_13 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_29;
        kernel_data_V_6_14 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_30;
        kernel_data_V_6_15 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_31;
        kernel_data_V_6_16 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_32;
        kernel_data_V_6_17 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_33;
        kernel_data_V_6_18 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_34;
        kernel_data_V_6_19 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_35;
        kernel_data_V_6_2 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_2;
        kernel_data_V_6_20 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_36;
        kernel_data_V_6_21 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_37;
        kernel_data_V_6_22 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_38;
        kernel_data_V_6_23 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_39;
        kernel_data_V_6_24 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_8;
        kernel_data_V_6_25 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_9;
        kernel_data_V_6_26 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_10;
        kernel_data_V_6_27 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_11;
        kernel_data_V_6_28 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_12;
        kernel_data_V_6_29 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_13;
        kernel_data_V_6_3 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_3;
        kernel_data_V_6_30 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_14;
        kernel_data_V_6_31 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_15;
        kernel_data_V_6_32 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_40;
        kernel_data_V_6_33 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_41;
        kernel_data_V_6_34 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_42;
        kernel_data_V_6_35 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_43;
        kernel_data_V_6_36 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_44;
        kernel_data_V_6_37 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_45;
        kernel_data_V_6_38 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_46;
        kernel_data_V_6_39 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_47;
        kernel_data_V_6_4 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_4;
        kernel_data_V_6_40 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_48;
        kernel_data_V_6_41 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_49;
        kernel_data_V_6_42 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_50;
        kernel_data_V_6_43 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_51;
        kernel_data_V_6_44 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_52;
        kernel_data_V_6_45 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_53;
        kernel_data_V_6_46 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_54;
        kernel_data_V_6_47 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_55;
        kernel_data_V_6_48 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_16;
        kernel_data_V_6_49 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_17;
        kernel_data_V_6_5 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_5;
        kernel_data_V_6_50 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_18;
        kernel_data_V_6_51 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_19;
        kernel_data_V_6_52 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_20;
        kernel_data_V_6_53 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_21;
        kernel_data_V_6_54 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_22;
        kernel_data_V_6_55 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_23;
        kernel_data_V_6_56 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_56;
        kernel_data_V_6_57 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_57;
        kernel_data_V_6_58 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_58;
        kernel_data_V_6_59 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_59;
        kernel_data_V_6_6 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_6;
        kernel_data_V_6_60 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_60;
        kernel_data_V_6_61 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_61;
        kernel_data_V_6_62 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_62;
        kernel_data_V_6_63 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_63;
        kernel_data_V_6_64 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_64;
        kernel_data_V_6_65 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_65;
        kernel_data_V_6_66 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_66;
        kernel_data_V_6_67 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_67;
        kernel_data_V_6_68 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_68;
        kernel_data_V_6_69 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_69;
        kernel_data_V_6_7 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_7;
        kernel_data_V_6_70 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_70;
        kernel_data_V_6_71 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_71;
        kernel_data_V_6_8 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_24;
        kernel_data_V_6_9 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_return_25;
        pX_6_load_reg_2155 <= pX_6;
        pY_6_load_reg_2149 <= pY_6;
        sX_6_load_reg_2129 <= sX_6;
        sY_6_load_reg_2139 <= sY_6;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12))) begin
        icmp_ln293_reg_2281 <= icmp_ln293_fu_1998_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1998_p2 == 1'd1))) begin
        icmp_ln297_reg_2290 <= icmp_ln297_fu_2038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_2180 <= icmp_ln64_fu_1613_p2;
        icmp_ln64_reg_2180_pp0_iter1_reg <= icmp_ln64_reg_2180;
        tmp_1_reg_2184 <= tmp_1_fu_1715_p74;
        tmp_3_reg_2194 <= {{w5_V_q0[63:32]}};
        tmp_4_reg_2199 <= {{w5_V_q0[95:64]}};
        tmp_5_reg_2204 <= {{w5_V_q0[112:96]}};
        trunc_ln76_reg_2189 <= trunc_ln76_fu_1865_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln64_reg_2180_pp0_iter2_reg <= icmp_ln64_reg_2180_pp0_iter1_reg;
        icmp_ln64_reg_2180_pp0_iter3_reg <= icmp_ln64_reg_2180_pp0_iter2_reg;
        icmp_ln64_reg_2180_pp0_iter4_reg <= icmp_ln64_reg_2180_pp0_iter3_reg;
        icmp_ln64_reg_2180_pp0_iter5_reg <= icmp_ln64_reg_2180_pp0_iter4_reg;
        icmp_ln64_reg_2180_pp0_iter6_reg <= icmp_ln64_reg_2180_pp0_iter5_reg;
        trunc_ln708_1_reg_2242 <= {{grp_fu_1914_p2[47:16]}};
        trunc_ln708_2_reg_2247 <= {{grp_fu_1923_p2[47:16]}};
        trunc_ln708_3_reg_2252 <= {{grp_fu_1932_p2[47:16]}};
        trunc_ln_reg_2237 <= {{grp_fu_1905_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln293_reg_2281 == 1'd1))) begin
        sY_6 <= ap_phi_mux_storemerge_i_i_phi_fu_427_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (icmp_ln297_fu_2038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1998_p2 == 1'd1))) begin
        select_ln303_reg_2294 <= select_ln303_fu_2059_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (icmp_ln293_fu_1998_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        select_ln308_reg_2285 <= select_ln308_fu_2019_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_data_0_V_reg_2089 <= data_V_data_0_V_dout;
        tmp_data_1_V_reg_2094 <= data_V_data_1_V_dout;
        tmp_data_2_V_reg_2099 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_2104 <= data_V_data_3_V_dout;
        tmp_data_4_V_reg_2109 <= data_V_data_4_V_dout;
        tmp_data_5_V_reg_2114 <= data_V_data_5_V_dout;
        tmp_data_6_V_reg_2119 <= data_V_data_6_V_dout;
        tmp_data_7_V_reg_2124 <= data_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_2175 <= w_index_fu_1607_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_2083_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln297_reg_2290 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln293_reg_2281 == 1'd1))) begin
        ap_phi_mux_storemerge_i_i_phi_fu_427_p4 = select_ln303_reg_2294;
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_427_p4 = storemerge_i_i_reg_423;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln64_reg_2180 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_w_index14_phi_fu_371_p4 = w_index_reg_2175;
    end else begin
        ap_phi_mux_w_index14_phi_fu_371_p4 = w_index14_reg_367;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_start = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config5_s_fu_434_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_2083_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_2161))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w5_V_ce0 = 1'b1;
    end else begin
        w5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((io_acc_block_signal_op27 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_1590_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_2083_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_1978_p2 = (trunc_ln_reg_2237 + res_out_0_V12_reg_379);

assign acc_1_V_fu_1983_p2 = (trunc_ln708_1_reg_2242 + res_out_1_V10_reg_390);

assign acc_2_V_fu_1988_p2 = (trunc_ln708_2_reg_2247 + res_out_2_V8_reg_401);

assign acc_3_V_fu_1993_p2 = (trunc_ln708_3_reg_2252 + tmp_data_3_V_676_reg_412);

assign add_ln301_fu_2043_p2 = (pY_6_load_reg_2149 + 32'd1);

assign add_ln303_fu_2054_p2 = (sY_6_load_reg_2139 + 32'd1);

assign add_ln306_fu_2003_p2 = (pX_6_load_reg_2155 + 32'd1);

assign add_ln308_fu_2014_p2 = (sX_6_load_reg_2129 + 32'd1);

assign add_ln78_fu_1596_p2 = (indvar_flatten15_reg_355 + 9'd1);

assign and_ln272_1_fu_1584_p2 = (icmp_ln272_11_fu_1572_p2 & icmp_ln272_10_fu_1552_p2);

assign and_ln272_2_fu_1590_p2 = (and_ln272_fu_1578_p2 & and_ln272_1_fu_1584_p2);

assign and_ln272_fu_1578_p2 = (icmp_ln272_fu_1522_p2 & icmp_ln272_1_fu_1532_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12 = ((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_352 = (~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12));
end

always @ (*) begin
    ap_condition_361 = (~((io_acc_block_signal_op378 == 1'b0) & (1'd1 == and_ln272_2_reg_2161)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1998_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_fu_1905_p1 = sext_ln1116_cast_fu_1899_p1;

assign grp_fu_1914_p1 = sext_ln1116_cast_fu_1899_p1;

assign grp_fu_1923_p1 = sext_ln1116_cast_fu_1899_p1;

assign grp_fu_1932_p0 = sext_ln1116_cast_fu_1899_p1;

assign icmp_ln272_10_fu_1552_p2 = (($signed(tmp_fu_1542_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_11_fu_1572_p2 = (($signed(tmp_6_fu_1562_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_1_fu_1532_p2 = ((sY_6 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_1522_p2 = ((sX_6 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_1998_p2 = ((pX_6_load_reg_2155 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_2038_p2 = ((pY_6_load_reg_2149 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_1613_p2 = ((ap_phi_mux_w_index14_phi_fu_371_p4 == 7'd71) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_2083_p2 = ((indvar_flatten15_reg_355 == 9'd323) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op27 = (data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign io_acc_block_signal_op378 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign res_V_data_0_V_din = acc_0_V_reg_2257;

assign res_V_data_1_V_din = acc_1_V_reg_2263;

assign res_V_data_2_V_din = acc_2_V_reg_2269;

assign res_V_data_3_V_din = acc_3_V_reg_2275;

assign select_ln303_fu_2059_p3 = ((icmp_ln272_1_reg_2144[0:0] === 1'b1) ? 32'd2 : add_ln303_fu_2054_p2);

assign select_ln308_fu_2019_p3 = ((icmp_ln272_reg_2134[0:0] === 1'b1) ? 32'd2 : add_ln308_fu_2014_p2);

assign sext_ln1116_cast_fu_1899_p1 = $signed(tmp_1_reg_2184);

assign start_out = real_start;

assign tmp_6_fu_1562_p4 = {{pX_6[31:1]}};

assign tmp_fu_1542_p4 = {{pY_6[31:1]}};

assign trunc_ln76_fu_1865_p1 = w5_V_q0[31:0];

assign w5_V_address0 = zext_ln76_fu_1602_p1;

assign w_index_fu_1607_p2 = (7'd1 + ap_phi_mux_w_index14_phi_fu_371_p4);

assign zext_ln76_fu_1602_p1 = ap_phi_mux_w_index14_phi_fu_371_p4;

endmodule //conv_2d_cl_array_array_ap_fixed_4u_config5_s
