-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_array_ap_fixed_8u_config17_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_array_ap_fixed_8u_config17_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_C85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000110010000101";
    constant ap_const_lv32_FFFFDBB4 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111101101110110100";
    constant ap_const_lv32_1C22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001110000100010";
    constant ap_const_lv32_9B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110110110";
    constant ap_const_lv32_FFFFFF47 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111101000111";
    constant ap_const_lv32_3937 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011100100110111";
    constant ap_const_lv32_16DB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001011011011011";
    constant ap_const_lv32_FFFFFB4F : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111101101001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_143 : STD_LOGIC_VECTOR (8 downto 0) := "101000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal kernel_data_V_4_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_4_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w17_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal w17_V_ce0 : STD_LOGIC;
    signal w17_V_q0 : STD_LOGIC_VECTOR (240 downto 0);
    signal pX_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal and_ln272_4_reg_1601 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal w_index22_reg_307 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_0_V_7520_reg_319 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_V_6818_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_V_6816_reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_V_6814_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_4_V_2912_reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_5_V_2910_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_6_V_298_reg_385 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_7_V_296_reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_reg_1549 : STD_LOGIC_VECTOR (31 downto 0);
    signal io_acc_block_signal_op27 : STD_LOGIC;
    signal tmp_data_1_V_reg_1554 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_V_reg_1559 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_V_reg_1564 : STD_LOGIC_VECTOR (31 downto 0);
    signal sX_8_load_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln272_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_reg_1574 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_8_load_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln272_4_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_4_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_8_load_reg_1589 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_8_load_reg_1595 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln272_4_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln78_fu_1040_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln78_reg_1605 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal w_index_fu_1051_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_index_reg_1615 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln64_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1620_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1111_p38 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln76_fu_1189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln76_reg_1629 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1634 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1639 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1644 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1649 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1654 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1659 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1664 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1116_cast_fu_1263_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln_reg_1721 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_4_reg_1726 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_5_reg_1731 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_6_reg_1736 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_7_reg_1741 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_8_reg_1746 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_9_reg_1751 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_s_reg_1756 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_fu_1418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_reg_1761 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal acc_1_V_fu_1423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_V_reg_1767 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_V_fu_1428_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_V_reg_1773 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_V_fu_1433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_V_reg_1779 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_V_fu_1438_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_V_reg_1785 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_V_fu_1443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_V_reg_1791 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_V_fu_1448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_V_reg_1797 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_V_fu_1453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_V_reg_1803 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln293_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln293_reg_1809 : STD_LOGIC_VECTOR (0 downto 0);
    signal io_acc_block_signal_op282 : STD_LOGIC;
    signal ap_block_state12 : BOOLEAN;
    signal select_ln308_fu_1479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln308_reg_1813 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln297_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln297_reg_1818 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln303_fu_1519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln303_reg_1822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_33 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_34 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_35 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten23_reg_295 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln78_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_w_index22_phi_fu_311_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_storemerge_i_i_phi_fu_411_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_i_i_reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln76_fu_1046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln306_fu_1463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln301_fu_1503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_986_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_fu_1006_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln272_5_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_6_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_3_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1287_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1332_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1269_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1278_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1287_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1296_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1305_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1314_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1323_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1332_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln308_fu_1474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln303_fu_1514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_364 : BOOLEAN;
    signal ap_condition_373 : BOOLEAN;

    component shift_line_buffer_array_ap_fixed_4u_config17_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_32_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_33_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_34_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_35_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_axi_mux_366_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_axi_mul_32s_32s_48_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component myproject_axi_mul_32s_17s_48_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component conv_2d_cl_array_array_ap_fixed_8u_config17_s_w17_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (240 downto 0) );
    end component;



begin
    w17_V_U : component conv_2d_cl_array_array_ap_fixed_8u_config17_s_w17_V
    generic map (
        DataWidth => 241,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w17_V_address0,
        ce0 => w17_V_ce0,
        q0 => w17_V_q0);

    call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418 : component shift_line_buffer_array_ap_fixed_4u_config17_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_ready,
        in_elem_data_0_V_read => tmp_data_0_V_reg_1549,
        in_elem_data_1_V_read => tmp_data_1_V_reg_1554,
        in_elem_data_2_V_read => tmp_data_2_V_reg_1559,
        in_elem_data_3_V_read => tmp_data_3_V_reg_1564,
        kernel_window_4_V_read => kernel_data_V_4_4,
        kernel_window_5_V_read => kernel_data_V_4_5,
        kernel_window_6_V_read => kernel_data_V_4_6,
        kernel_window_7_V_read => kernel_data_V_4_7,
        kernel_window_8_V_read => kernel_data_V_4_8,
        kernel_window_9_V_read => kernel_data_V_4_9,
        kernel_window_10_V_read => kernel_data_V_4_10,
        kernel_window_11_V_read => kernel_data_V_4_11,
        kernel_window_16_V_read => kernel_data_V_4_16,
        kernel_window_17_V_read => kernel_data_V_4_17,
        kernel_window_18_V_read => kernel_data_V_4_18,
        kernel_window_19_V_read => kernel_data_V_4_19,
        kernel_window_20_V_read => kernel_data_V_4_20,
        kernel_window_21_V_read => kernel_data_V_4_21,
        kernel_window_22_V_read => kernel_data_V_4_22,
        kernel_window_23_V_read => kernel_data_V_4_23,
        kernel_window_28_V_read => kernel_data_V_4_28,
        kernel_window_29_V_read => kernel_data_V_4_29,
        kernel_window_30_V_read => kernel_data_V_4_30,
        kernel_window_31_V_read => kernel_data_V_4_31,
        kernel_window_32_V_read => kernel_data_V_4_32,
        kernel_window_33_V_read => kernel_data_V_4_33,
        kernel_window_34_V_read => kernel_data_V_4_34,
        kernel_window_35_V_read => kernel_data_V_4_35,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_8,
        ap_return_9 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_9,
        ap_return_10 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_10,
        ap_return_11 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_11,
        ap_return_12 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_12,
        ap_return_13 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_13,
        ap_return_14 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_14,
        ap_return_15 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_15,
        ap_return_16 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_16,
        ap_return_17 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_17,
        ap_return_18 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_18,
        ap_return_19 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_19,
        ap_return_20 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_20,
        ap_return_21 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_21,
        ap_return_22 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_22,
        ap_return_23 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_23,
        ap_return_24 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_24,
        ap_return_25 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_25,
        ap_return_26 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_26,
        ap_return_27 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_27,
        ap_return_28 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_28,
        ap_return_29 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_29,
        ap_return_30 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_30,
        ap_return_31 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_31,
        ap_return_32 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_32,
        ap_return_33 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_33,
        ap_return_34 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_34,
        ap_return_35 => call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_35);

    myproject_axi_mux_366_32_1_1_U471 : component myproject_axi_mux_366_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => kernel_data_V_4_0,
        din1 => kernel_data_V_4_1,
        din2 => kernel_data_V_4_2,
        din3 => kernel_data_V_4_3,
        din4 => kernel_data_V_4_4,
        din5 => kernel_data_V_4_5,
        din6 => kernel_data_V_4_6,
        din7 => kernel_data_V_4_7,
        din8 => kernel_data_V_4_8,
        din9 => kernel_data_V_4_9,
        din10 => kernel_data_V_4_10,
        din11 => kernel_data_V_4_11,
        din12 => kernel_data_V_4_12,
        din13 => kernel_data_V_4_13,
        din14 => kernel_data_V_4_14,
        din15 => kernel_data_V_4_15,
        din16 => kernel_data_V_4_16,
        din17 => kernel_data_V_4_17,
        din18 => kernel_data_V_4_18,
        din19 => kernel_data_V_4_19,
        din20 => kernel_data_V_4_20,
        din21 => kernel_data_V_4_21,
        din22 => kernel_data_V_4_22,
        din23 => kernel_data_V_4_23,
        din24 => kernel_data_V_4_24,
        din25 => kernel_data_V_4_25,
        din26 => kernel_data_V_4_26,
        din27 => kernel_data_V_4_27,
        din28 => kernel_data_V_4_28,
        din29 => kernel_data_V_4_29,
        din30 => kernel_data_V_4_30,
        din31 => kernel_data_V_4_31,
        din32 => kernel_data_V_4_32,
        din33 => kernel_data_V_4_33,
        din34 => kernel_data_V_4_34,
        din35 => kernel_data_V_4_35,
        din36 => w_index22_reg_307,
        dout => tmp_7_fu_1111_p38);

    myproject_axi_mul_32s_32s_48_5_1_U472 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln76_reg_1629,
        din1 => grp_fu_1269_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1269_p2);

    myproject_axi_mul_32s_32s_48_5_1_U473 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_6_reg_1634,
        din1 => grp_fu_1278_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1278_p2);

    myproject_axi_mul_32s_32s_48_5_1_U474 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_8_reg_1639,
        din1 => grp_fu_1287_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1287_p2);

    myproject_axi_mul_32s_32s_48_5_1_U475 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_1644,
        din1 => grp_fu_1296_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1296_p2);

    myproject_axi_mul_32s_32s_48_5_1_U476 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_1_reg_1649,
        din1 => grp_fu_1305_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1305_p2);

    myproject_axi_mul_32s_32s_48_5_1_U477 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_3_reg_1654,
        din1 => grp_fu_1314_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1314_p2);

    myproject_axi_mul_32s_32s_48_5_1_U478 : component myproject_axi_mul_32s_32s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_4_reg_1659,
        din1 => grp_fu_1323_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1323_p2);

    myproject_axi_mul_32s_17s_48_5_1_U479 : component myproject_axi_mul_32s_17s_48_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1332_p0,
        din1 => tmp_5_reg_1664,
        ce => ap_const_logic_1,
        dout => grp_fu_1332_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln78_fu_1543_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln64_fu_1057_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten23_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln78_fu_1543_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                indvar_flatten23_reg_295 <= add_ln78_reg_1605;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten23_reg_295 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    pX_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_364)) then
                if ((icmp_ln293_fu_1458_p2 = ap_const_lv1_1)) then 
                    pX_8 <= ap_const_lv32_0;
                elsif ((icmp_ln293_fu_1458_p2 = ap_const_lv1_0)) then 
                    pX_8 <= add_ln306_fu_1463_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_373)) then
                if ((icmp_ln297_fu_1498_p2 = ap_const_lv1_1)) then 
                    pY_8 <= ap_const_lv32_0;
                elsif ((icmp_ln297_fu_1498_p2 = ap_const_lv1_0)) then 
                    pY_8 <= add_ln301_fu_1503_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln293_reg_1809 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                sX_8 <= select_ln308_reg_1813;
            elsif ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln293_fu_1458_p2 = ap_const_lv1_1))) then 
                sX_8 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge_i_i_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln297_fu_1498_p2 = ap_const_lv1_1) and (icmp_ln293_fu_1458_p2 = ap_const_lv1_1))) then 
                storemerge_i_i_reg_407 <= ap_const_lv32_0;
            elsif (((icmp_ln297_reg_1818 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln293_reg_1809 = ap_const_lv1_1))) then 
                storemerge_i_i_reg_407 <= select_ln303_reg_1822;
            end if; 
        end if;
    end process;

    tmp_data_0_V_7520_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_0_V_7520_reg_319 <= acc_0_V_fu_1418_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_0_V_7520_reg_319 <= ap_const_lv32_C85;
            end if; 
        end if;
    end process;

    tmp_data_1_V_6818_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_1_V_6818_reg_330 <= acc_1_V_fu_1423_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_1_V_6818_reg_330 <= ap_const_lv32_FFFFDBB4;
            end if; 
        end if;
    end process;

    tmp_data_2_V_6816_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_2_V_6816_reg_341 <= acc_2_V_fu_1428_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_2_V_6816_reg_341 <= ap_const_lv32_1C22;
            end if; 
        end if;
    end process;

    tmp_data_3_V_6814_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_3_V_6814_reg_352 <= acc_3_V_fu_1433_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_3_V_6814_reg_352 <= ap_const_lv32_9B6;
            end if; 
        end if;
    end process;

    tmp_data_4_V_2912_reg_363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_4_V_2912_reg_363 <= acc_4_V_fu_1438_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_4_V_2912_reg_363 <= ap_const_lv32_FFFFFF47;
            end if; 
        end if;
    end process;

    tmp_data_5_V_2910_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_5_V_2910_reg_374 <= acc_5_V_fu_1443_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_5_V_2910_reg_374 <= ap_const_lv32_3937;
            end if; 
        end if;
    end process;

    tmp_data_6_V_298_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_6_V_298_reg_385 <= acc_6_V_fu_1448_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_6_V_298_reg_385 <= ap_const_lv32_16DB;
            end if; 
        end if;
    end process;

    tmp_data_7_V_296_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                tmp_data_7_V_296_reg_396 <= acc_7_V_fu_1453_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                tmp_data_7_V_296_reg_396 <= ap_const_lv32_FFFFFB4F;
            end if; 
        end if;
    end process;

    w_index22_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_reg_1620 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                w_index22_reg_307 <= w_index_reg_1615;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then 
                w_index22_reg_307 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                acc_0_V_reg_1761 <= acc_0_V_fu_1418_p2;
                acc_1_V_reg_1767 <= acc_1_V_fu_1423_p2;
                acc_2_V_reg_1773 <= acc_2_V_fu_1428_p2;
                acc_3_V_reg_1779 <= acc_3_V_fu_1433_p2;
                acc_4_V_reg_1785 <= acc_4_V_fu_1438_p2;
                acc_5_V_reg_1791 <= acc_5_V_fu_1443_p2;
                acc_6_V_reg_1797 <= acc_6_V_fu_1448_p2;
                acc_7_V_reg_1803 <= acc_7_V_fu_1453_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln78_reg_1605 <= add_ln78_fu_1040_p2;
                and_ln272_4_reg_1601 <= and_ln272_4_fu_1034_p2;
                icmp_ln272_4_reg_1584 <= icmp_ln272_4_fu_976_p2;
                icmp_ln272_reg_1574 <= icmp_ln272_fu_966_p2;
                kernel_data_V_4_0 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_0;
                kernel_data_V_4_1 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_1;
                kernel_data_V_4_10 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_18;
                kernel_data_V_4_11 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_19;
                kernel_data_V_4_12 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_4;
                kernel_data_V_4_13 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_5;
                kernel_data_V_4_14 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_6;
                kernel_data_V_4_15 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_7;
                kernel_data_V_4_16 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_20;
                kernel_data_V_4_17 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_21;
                kernel_data_V_4_18 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_22;
                kernel_data_V_4_19 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_23;
                kernel_data_V_4_2 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_2;
                kernel_data_V_4_20 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_24;
                kernel_data_V_4_21 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_25;
                kernel_data_V_4_22 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_26;
                kernel_data_V_4_23 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_27;
                kernel_data_V_4_24 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_8;
                kernel_data_V_4_25 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_9;
                kernel_data_V_4_26 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_10;
                kernel_data_V_4_27 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_11;
                kernel_data_V_4_28 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_28;
                kernel_data_V_4_29 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_29;
                kernel_data_V_4_3 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_3;
                kernel_data_V_4_30 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_30;
                kernel_data_V_4_31 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_31;
                kernel_data_V_4_32 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_32;
                kernel_data_V_4_33 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_33;
                kernel_data_V_4_34 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_34;
                kernel_data_V_4_35 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_35;
                kernel_data_V_4_4 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_12;
                kernel_data_V_4_5 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_13;
                kernel_data_V_4_6 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_14;
                kernel_data_V_4_7 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_15;
                kernel_data_V_4_8 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_16;
                kernel_data_V_4_9 <= call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_return_17;
                pX_8_load_reg_1595 <= pX_8;
                pY_8_load_reg_1589 <= pY_8;
                sX_8_load_reg_1569 <= sX_8;
                sY_8_load_reg_1579 <= sY_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                icmp_ln293_reg_1809 <= icmp_ln293_fu_1458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln293_fu_1458_p2 = ap_const_lv1_1))) then
                icmp_ln297_reg_1818 <= icmp_ln297_fu_1498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln64_reg_1620 <= icmp_ln64_fu_1057_p2;
                icmp_ln64_reg_1620_pp0_iter1_reg <= icmp_ln64_reg_1620;
                tmp_1_reg_1649 <= w17_V_q0(159 downto 128);
                tmp_3_reg_1654 <= w17_V_q0(191 downto 160);
                tmp_4_reg_1659 <= w17_V_q0(223 downto 192);
                tmp_5_reg_1664 <= w17_V_q0(240 downto 224);
                tmp_6_reg_1634 <= w17_V_q0(63 downto 32);
                tmp_7_reg_1624 <= tmp_7_fu_1111_p38;
                tmp_8_reg_1639 <= w17_V_q0(95 downto 64);
                tmp_9_reg_1644 <= w17_V_q0(127 downto 96);
                trunc_ln76_reg_1629 <= trunc_ln76_fu_1189_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln64_reg_1620_pp0_iter2_reg <= icmp_ln64_reg_1620_pp0_iter1_reg;
                icmp_ln64_reg_1620_pp0_iter3_reg <= icmp_ln64_reg_1620_pp0_iter2_reg;
                icmp_ln64_reg_1620_pp0_iter4_reg <= icmp_ln64_reg_1620_pp0_iter3_reg;
                icmp_ln64_reg_1620_pp0_iter5_reg <= icmp_ln64_reg_1620_pp0_iter4_reg;
                icmp_ln64_reg_1620_pp0_iter6_reg <= icmp_ln64_reg_1620_pp0_iter5_reg;
                trunc_ln708_4_reg_1726 <= grp_fu_1278_p2(47 downto 16);
                trunc_ln708_5_reg_1731 <= grp_fu_1287_p2(47 downto 16);
                trunc_ln708_6_reg_1736 <= grp_fu_1296_p2(47 downto 16);
                trunc_ln708_7_reg_1741 <= grp_fu_1305_p2(47 downto 16);
                trunc_ln708_8_reg_1746 <= grp_fu_1314_p2(47 downto 16);
                trunc_ln708_9_reg_1751 <= grp_fu_1323_p2(47 downto 16);
                trunc_ln708_s_reg_1756 <= grp_fu_1332_p2(47 downto 16);
                trunc_ln_reg_1721 <= grp_fu_1269_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln293_reg_1809 = ap_const_lv1_1))) then
                sY_8 <= ap_phi_mux_storemerge_i_i_phi_fu_411_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (icmp_ln297_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln293_fu_1458_p2 = ap_const_lv1_1))) then
                select_ln303_reg_1822 <= select_ln303_fu_1519_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (icmp_ln293_fu_1458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                select_ln308_reg_1813 <= select_ln308_fu_1479_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op27 = ap_const_logic_1))) then
                tmp_data_0_V_reg_1549 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_1554 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_1559 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_1564 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w_index_reg_1615 <= w_index_fu_1051_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op27, ap_CS_fsm_state3, and_ln272_4_fu_1034_p2, ap_enable_reg_pp0_iter7, io_acc_block_signal_op282, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter6, ap_CS_fsm_state13, icmp_ln78_fu_1543_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op27 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln272_4_fu_1034_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln78_fu_1543_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    acc_0_V_fu_1418_p2 <= std_logic_vector(unsigned(trunc_ln_reg_1721) + unsigned(tmp_data_0_V_7520_reg_319));
    acc_1_V_fu_1423_p2 <= std_logic_vector(unsigned(trunc_ln708_4_reg_1726) + unsigned(tmp_data_1_V_6818_reg_330));
    acc_2_V_fu_1428_p2 <= std_logic_vector(unsigned(trunc_ln708_5_reg_1731) + unsigned(tmp_data_2_V_6816_reg_341));
    acc_3_V_fu_1433_p2 <= std_logic_vector(unsigned(trunc_ln708_6_reg_1736) + unsigned(tmp_data_3_V_6814_reg_352));
    acc_4_V_fu_1438_p2 <= std_logic_vector(unsigned(trunc_ln708_7_reg_1741) + unsigned(tmp_data_4_V_2912_reg_363));
    acc_5_V_fu_1443_p2 <= std_logic_vector(unsigned(trunc_ln708_8_reg_1746) + unsigned(tmp_data_5_V_2910_reg_374));
    acc_6_V_fu_1448_p2 <= std_logic_vector(unsigned(trunc_ln708_9_reg_1751) + unsigned(tmp_data_6_V_298_reg_385));
    acc_7_V_fu_1453_p2 <= std_logic_vector(unsigned(trunc_ln708_s_reg_1756) + unsigned(tmp_data_7_V_296_reg_396));
    add_ln301_fu_1503_p2 <= std_logic_vector(unsigned(pY_8_load_reg_1589) + unsigned(ap_const_lv32_1));
    add_ln303_fu_1514_p2 <= std_logic_vector(unsigned(sY_8_load_reg_1579) + unsigned(ap_const_lv32_1));
    add_ln306_fu_1463_p2 <= std_logic_vector(unsigned(pX_8_load_reg_1595) + unsigned(ap_const_lv32_1));
    add_ln308_fu_1474_p2 <= std_logic_vector(unsigned(sX_8_load_reg_1569) + unsigned(ap_const_lv32_1));
    add_ln78_fu_1040_p2 <= std_logic_vector(unsigned(indvar_flatten23_reg_295) + unsigned(ap_const_lv9_1));
    and_ln272_3_fu_1028_p2 <= (icmp_ln272_6_fu_1016_p2 and icmp_ln272_5_fu_996_p2);
    and_ln272_4_fu_1034_p2 <= (and_ln272_fu_1022_p2 and and_ln272_3_fu_1028_p2);
    and_ln272_fu_1022_p2 <= (icmp_ln272_fu_966_p2 and icmp_ln272_4_fu_976_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(4);
    ap_CS_fsm_state13 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_assign_proc : process(and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
                ap_block_state12 <= ((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_364_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
                ap_condition_364 <= (not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12));
    end process;


    ap_condition_373_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, icmp_ln293_fu_1458_p2, io_acc_block_signal_op282)
    begin
                ap_condition_373 <= (not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln293_fu_1458_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state13, icmp_ln78_fu_1543_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln78_fu_1543_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_411_p4_assign_proc : process(icmp_ln293_reg_1809, icmp_ln297_reg_1818, select_ln303_reg_1822, ap_CS_fsm_state13, storemerge_i_i_reg_407)
    begin
        if (((icmp_ln297_reg_1818 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln293_reg_1809 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_i_i_phi_fu_411_p4 <= select_ln303_reg_1822;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_411_p4 <= storemerge_i_i_reg_407;
        end if; 
    end process;


    ap_phi_mux_w_index22_phi_fu_311_p4_assign_proc : process(w_index22_reg_307, ap_CS_fsm_pp0_stage0, w_index_reg_1615, icmp_ln64_reg_1620, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln64_reg_1620 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_w_index22_phi_fu_311_p4 <= w_index_reg_1615;
        else 
            ap_phi_mux_w_index22_phi_fu_311_p4 <= w_index22_reg_307;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_start_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_start <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_fixed_4u_config17_s_fu_418_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op27 = ap_const_logic_1))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op27 = ap_const_logic_1))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op27 = ap_const_logic_1))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op27 = ap_const_logic_1))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1269_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1278_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1287_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1296_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1305_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1314_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1323_p1 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    grp_fu_1332_p0 <= sext_ln1116_cast_fu_1263_p1(32 - 1 downto 0);
    icmp_ln272_4_fu_976_p2 <= "1" when (sY_8 = ap_const_lv32_2) else "0";
    icmp_ln272_5_fu_996_p2 <= "1" when (signed(tmp_fu_986_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln272_6_fu_1016_p2 <= "1" when (signed(tmp_2_fu_1006_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln272_fu_966_p2 <= "1" when (sX_8 = ap_const_lv32_2) else "0";
    icmp_ln293_fu_1458_p2 <= "1" when (pX_8_load_reg_1595 = ap_const_lv32_11) else "0";
    icmp_ln297_fu_1498_p2 <= "1" when (pY_8_load_reg_1589 = ap_const_lv32_11) else "0";
    icmp_ln64_fu_1057_p2 <= "1" when (ap_phi_mux_w_index22_phi_fu_311_p4 = ap_const_lv6_23) else "0";
    icmp_ln78_fu_1543_p2 <= "1" when (indvar_flatten23_reg_295 = ap_const_lv9_143) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state13, icmp_ln78_fu_1543_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln78_fu_1543_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op27 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op282 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= acc_0_V_reg_1761;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= acc_1_V_reg_1767;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= acc_2_V_reg_1773;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= acc_3_V_reg_1779;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= acc_4_V_reg_1785;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= acc_5_V_reg_1791;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= acc_6_V_reg_1797;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state12, and_ln272_4_reg_1601)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= acc_7_V_reg_1803;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state12, and_ln272_4_reg_1601, io_acc_block_signal_op282)
    begin
        if ((not(((io_acc_block_signal_op282 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) and (ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln272_4_reg_1601))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln303_fu_1519_p3 <= 
        ap_const_lv32_2 when (icmp_ln272_4_reg_1584(0) = '1') else 
        add_ln303_fu_1514_p2;
    select_ln308_fu_1479_p3 <= 
        ap_const_lv32_2 when (icmp_ln272_reg_1574(0) = '1') else 
        add_ln308_fu_1474_p2;
        sext_ln1116_cast_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_reg_1624),48));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_1006_p4 <= pX_8(31 downto 1);
    tmp_fu_986_p4 <= pY_8(31 downto 1);
    trunc_ln76_fu_1189_p1 <= w17_V_q0(32 - 1 downto 0);
    w17_V_address0 <= zext_ln76_fu_1046_p1(6 - 1 downto 0);

    w17_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w17_V_ce0 <= ap_const_logic_1;
        else 
            w17_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_1051_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_w_index22_phi_fu_311_p4));
    zext_ln76_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index22_phi_fu_311_p4),64));
end behav;
