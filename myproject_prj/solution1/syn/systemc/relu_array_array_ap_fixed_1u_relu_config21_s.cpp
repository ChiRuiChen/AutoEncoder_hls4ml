// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_array_array_ap_fixed_1u_relu_config21_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> relu_array_array_ap_fixed_1u_relu_config21_s::ap_ST_fsm_state1 = "1";
const sc_lv<3> relu_array_array_ap_fixed_1u_relu_config21_s::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> relu_array_array_ap_fixed_1u_relu_config21_s::ap_ST_fsm_state6 = "100";
const sc_lv<32> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_boolean_1 = true;
const sc_lv<32> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv32_1 = "1";
const bool relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_boolean_0 = false;
const sc_lv<1> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv1_0 = "0";
const sc_lv<1> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv1_1 = "1";
const sc_lv<11> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv11_0 = "00000000000";
const sc_lv<11> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv11_400 = "10000000000";
const sc_lv<11> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv11_1 = "1";
const sc_lv<31> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> relu_array_array_ap_fixed_1u_relu_config21_s::ap_const_lv32_2 = "10";

relu_array_array_ap_fixed_1u_relu_config21_s::relu_array_array_ap_fixed_1u_relu_config21_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( data_V_data_V_empty_n );
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_104 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( data_V_data_V_empty_n );
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_104 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( data_V_data_V_empty_n );
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_104 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( data_V_data_V_empty_n );
    sensitive << ( icmp_ln60_reg_104 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln60_fu_72_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_V_data_V_blk_n);
    sensitive << ( data_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln60_reg_104 );

    SC_METHOD(thread_data_V_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln60_reg_104 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_78_p2);
    sensitive << ( i_0_reg_61 );

    SC_METHOD(thread_icmp_ln1494_fu_88_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter1_reg );
    sensitive << ( tmp_data_0_V_reg_113 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_icmp_ln60_fu_72_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_reg_61 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_out_data_data_V_fu_93_p3);
    sensitive << ( trunc_ln1494_reg_118 );
    sensitive << ( icmp_ln1494_fu_88_p2 );

    SC_METHOD(thread_res_V_data_V_blk_n);
    sensitive << ( res_V_data_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );

    SC_METHOD(thread_res_V_data_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );
    sensitive << ( out_data_data_V_reg_123 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_reg_104_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_trunc_ln1494_fu_84_p1);
    sensitive << ( data_V_data_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln60_fu_72_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_array_array_ap_fixed_1u_relu_config21_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_data_V_dout, "(port)data_V_data_V_dout");
    sc_trace(mVcdFile, data_V_data_V_empty_n, "(port)data_V_data_V_empty_n");
    sc_trace(mVcdFile, data_V_data_V_read, "(port)data_V_data_V_read");
    sc_trace(mVcdFile, res_V_data_V_din, "(port)res_V_data_V_din");
    sc_trace(mVcdFile, res_V_data_V_full_n, "(port)res_V_data_V_full_n");
    sc_trace(mVcdFile, res_V_data_V_write, "(port)res_V_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data_V_data_V_blk_n, "data_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln60_reg_104, "icmp_ln60_reg_104");
    sc_trace(mVcdFile, res_V_data_V_blk_n, "res_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, icmp_ln60_reg_104_pp0_iter2_reg, "icmp_ln60_reg_104_pp0_iter2_reg");
    sc_trace(mVcdFile, i_0_reg_61, "i_0_reg_61");
    sc_trace(mVcdFile, icmp_ln60_fu_72_p2, "icmp_ln60_fu_72_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln60_reg_104_pp0_iter1_reg, "icmp_ln60_reg_104_pp0_iter1_reg");
    sc_trace(mVcdFile, i_fu_78_p2, "i_fu_78_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_data_0_V_reg_113, "tmp_data_0_V_reg_113");
    sc_trace(mVcdFile, trunc_ln1494_fu_84_p1, "trunc_ln1494_fu_84_p1");
    sc_trace(mVcdFile, trunc_ln1494_reg_118, "trunc_ln1494_reg_118");
    sc_trace(mVcdFile, out_data_data_V_fu_93_p3, "out_data_data_V_fu_93_p3");
    sc_trace(mVcdFile, out_data_data_V_reg_123, "out_data_data_V_reg_123");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, icmp_ln1494_fu_88_p2, "icmp_ln1494_fu_88_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

relu_array_array_ap_fixed_1u_relu_config21_s::~relu_array_array_ap_fixed_1u_relu_config21_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_fu_72_p2.read()))) {
        i_0_reg_61 = i_fu_78_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_61 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln60_reg_104 = icmp_ln60_fu_72_p2.read();
        icmp_ln60_reg_104_pp0_iter1_reg = icmp_ln60_reg_104.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln60_reg_104_pp0_iter2_reg = icmp_ln60_reg_104_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter1_reg.read()))) {
        out_data_data_V_reg_123 = out_data_data_V_fu_93_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_0_V_reg_113 = data_V_data_V_dout.read();
        trunc_ln1494_reg_118 = trunc_ln1494_fu_84_p1.read();
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_V_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read())));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_V_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read())));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_V_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read())));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_data_V_empty_n.read()));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, res_V_data_V_full_n.read()));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln60_fu_72_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_data_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0))) {
        data_V_data_V_blk_n = data_V_data_V_empty_n.read();
    } else {
        data_V_data_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_data_V_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_reg_104.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_V_read = ap_const_logic_1;
    } else {
        data_V_data_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_i_fu_78_p2() {
    i_fu_78_p2 = (!i_0_reg_61.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i_0_reg_61.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_icmp_ln1494_fu_88_p2() {
    icmp_ln1494_fu_88_p2 = (!tmp_data_0_V_reg_113.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_data_0_V_reg_113.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_icmp_ln60_fu_72_p2() {
    icmp_ln60_fu_72_p2 = (!i_0_reg_61.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_61.read() == ap_const_lv11_400);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_out_data_data_V_fu_93_p3() {
    out_data_data_V_fu_93_p3 = (!icmp_ln1494_fu_88_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln1494_fu_88_p2.read()[0].to_bool())? trunc_ln1494_reg_118.read(): ap_const_lv31_0);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_res_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter2_reg.read()))) {
        res_V_data_V_blk_n = res_V_data_V_full_n.read();
    } else {
        res_V_data_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_res_V_data_V_din() {
    res_V_data_V_din = esl_zext<32,31>(out_data_data_V_reg_123.read());
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_res_V_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln60_reg_104_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_V_write = ap_const_logic_1;
    } else {
        res_V_data_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_trunc_ln1494_fu_84_p1() {
    trunc_ln1494_fu_84_p1 = data_V_data_V_dout.read().range(31-1, 0);
}

void relu_array_array_ap_fixed_1u_relu_config21_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln60_fu_72_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln60_fu_72_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

