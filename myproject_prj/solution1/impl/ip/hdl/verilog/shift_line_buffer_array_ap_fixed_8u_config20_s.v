// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module shift_line_buffer_array_ap_fixed_8u_config20_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_elem_data_0_V_read,
        in_elem_data_1_V_read,
        in_elem_data_2_V_read,
        in_elem_data_3_V_read,
        in_elem_data_4_V_read,
        in_elem_data_5_V_read,
        in_elem_data_6_V_read,
        in_elem_data_7_V_read,
        kernel_window_8_V_read,
        kernel_window_9_V_read,
        kernel_window_10_V_read,
        kernel_window_11_V_read,
        kernel_window_12_V_read,
        kernel_window_13_V_read,
        kernel_window_14_V_read,
        kernel_window_15_V_read,
        kernel_window_16_V_read,
        kernel_window_17_V_read,
        kernel_window_18_V_read,
        kernel_window_19_V_read,
        kernel_window_20_V_read,
        kernel_window_21_V_read,
        kernel_window_22_V_read,
        kernel_window_23_V_read,
        kernel_window_32_V_read,
        kernel_window_33_V_read,
        kernel_window_34_V_read,
        kernel_window_35_V_read,
        kernel_window_36_V_read,
        kernel_window_37_V_read,
        kernel_window_38_V_read,
        kernel_window_39_V_read,
        kernel_window_40_V_read,
        kernel_window_41_V_read,
        kernel_window_42_V_read,
        kernel_window_43_V_read,
        kernel_window_44_V_read,
        kernel_window_45_V_read,
        kernel_window_46_V_read,
        kernel_window_47_V_read,
        kernel_window_56_V_read,
        kernel_window_57_V_read,
        kernel_window_58_V_read,
        kernel_window_59_V_read,
        kernel_window_60_V_read,
        kernel_window_61_V_read,
        kernel_window_62_V_read,
        kernel_window_63_V_read,
        kernel_window_64_V_read,
        kernel_window_65_V_read,
        kernel_window_66_V_read,
        kernel_window_67_V_read,
        kernel_window_68_V_read,
        kernel_window_69_V_read,
        kernel_window_70_V_read,
        kernel_window_71_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_elem_data_0_V_read;
input  [31:0] in_elem_data_1_V_read;
input  [31:0] in_elem_data_2_V_read;
input  [31:0] in_elem_data_3_V_read;
input  [31:0] in_elem_data_4_V_read;
input  [31:0] in_elem_data_5_V_read;
input  [31:0] in_elem_data_6_V_read;
input  [31:0] in_elem_data_7_V_read;
input  [31:0] kernel_window_8_V_read;
input  [31:0] kernel_window_9_V_read;
input  [31:0] kernel_window_10_V_read;
input  [31:0] kernel_window_11_V_read;
input  [31:0] kernel_window_12_V_read;
input  [31:0] kernel_window_13_V_read;
input  [31:0] kernel_window_14_V_read;
input  [31:0] kernel_window_15_V_read;
input  [31:0] kernel_window_16_V_read;
input  [31:0] kernel_window_17_V_read;
input  [31:0] kernel_window_18_V_read;
input  [31:0] kernel_window_19_V_read;
input  [31:0] kernel_window_20_V_read;
input  [31:0] kernel_window_21_V_read;
input  [31:0] kernel_window_22_V_read;
input  [31:0] kernel_window_23_V_read;
input  [31:0] kernel_window_32_V_read;
input  [31:0] kernel_window_33_V_read;
input  [31:0] kernel_window_34_V_read;
input  [31:0] kernel_window_35_V_read;
input  [31:0] kernel_window_36_V_read;
input  [31:0] kernel_window_37_V_read;
input  [31:0] kernel_window_38_V_read;
input  [31:0] kernel_window_39_V_read;
input  [31:0] kernel_window_40_V_read;
input  [31:0] kernel_window_41_V_read;
input  [31:0] kernel_window_42_V_read;
input  [31:0] kernel_window_43_V_read;
input  [31:0] kernel_window_44_V_read;
input  [31:0] kernel_window_45_V_read;
input  [31:0] kernel_window_46_V_read;
input  [31:0] kernel_window_47_V_read;
input  [31:0] kernel_window_56_V_read;
input  [31:0] kernel_window_57_V_read;
input  [31:0] kernel_window_58_V_read;
input  [31:0] kernel_window_59_V_read;
input  [31:0] kernel_window_60_V_read;
input  [31:0] kernel_window_61_V_read;
input  [31:0] kernel_window_62_V_read;
input  [31:0] kernel_window_63_V_read;
input  [31:0] kernel_window_64_V_read;
input  [31:0] kernel_window_65_V_read;
input  [31:0] kernel_window_66_V_read;
input  [31:0] kernel_window_67_V_read;
input  [31:0] kernel_window_68_V_read;
input  [31:0] kernel_window_69_V_read;
input  [31:0] kernel_window_70_V_read;
input  [31:0] kernel_window_71_V_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;
output  [31:0] ap_return_16;
output  [31:0] ap_return_17;
output  [31:0] ap_return_18;
output  [31:0] ap_return_19;
output  [31:0] ap_return_20;
output  [31:0] ap_return_21;
output  [31:0] ap_return_22;
output  [31:0] ap_return_23;
output  [31:0] ap_return_24;
output  [31:0] ap_return_25;
output  [31:0] ap_return_26;
output  [31:0] ap_return_27;
output  [31:0] ap_return_28;
output  [31:0] ap_return_29;
output  [31:0] ap_return_30;
output  [31:0] ap_return_31;
output  [31:0] ap_return_32;
output  [31:0] ap_return_33;
output  [31:0] ap_return_34;
output  [31:0] ap_return_35;
output  [31:0] ap_return_36;
output  [31:0] ap_return_37;
output  [31:0] ap_return_38;
output  [31:0] ap_return_39;
output  [31:0] ap_return_40;
output  [31:0] ap_return_41;
output  [31:0] ap_return_42;
output  [31:0] ap_return_43;
output  [31:0] ap_return_44;
output  [31:0] ap_return_45;
output  [31:0] ap_return_46;
output  [31:0] ap_return_47;
output  [31:0] ap_return_48;
output  [31:0] ap_return_49;
output  [31:0] ap_return_50;
output  [31:0] ap_return_51;
output  [31:0] ap_return_52;
output  [31:0] ap_return_53;
output  [31:0] ap_return_54;
output  [31:0] ap_return_55;
output  [31:0] ap_return_56;
output  [31:0] ap_return_57;
output  [31:0] ap_return_58;
output  [31:0] ap_return_59;
output  [31:0] ap_return_60;
output  [31:0] ap_return_61;
output  [31:0] ap_return_62;
output  [31:0] ap_return_63;
output  [31:0] ap_return_64;
output  [31:0] ap_return_65;
output  [31:0] ap_return_66;
output  [31:0] ap_return_67;
output  [31:0] ap_return_68;
output  [31:0] ap_return_69;
output  [31:0] ap_return_70;
output  [31:0] ap_return_71;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    line_buffer_Array_V_5_0_0_ce0;
reg    line_buffer_Array_V_5_0_0_we0;
wire   [31:0] line_buffer_Array_V_5_0_0_q0;
reg    line_buffer_Array_V_5_1_0_ce0;
reg    line_buffer_Array_V_5_1_0_we0;
wire   [31:0] line_buffer_Array_V_5_1_0_q0;
reg    line_buffer_Array_V_5_0_1_ce0;
reg    line_buffer_Array_V_5_0_1_we0;
wire   [31:0] line_buffer_Array_V_5_0_1_q0;
reg    line_buffer_Array_V_5_1_1_ce0;
reg    line_buffer_Array_V_5_1_1_we0;
wire   [31:0] line_buffer_Array_V_5_1_1_q0;
reg    line_buffer_Array_V_5_0_2_ce0;
reg    line_buffer_Array_V_5_0_2_we0;
wire   [31:0] line_buffer_Array_V_5_0_2_q0;
reg    line_buffer_Array_V_5_1_2_ce0;
reg    line_buffer_Array_V_5_1_2_we0;
wire   [31:0] line_buffer_Array_V_5_1_2_q0;
reg    line_buffer_Array_V_5_0_3_ce0;
reg    line_buffer_Array_V_5_0_3_we0;
wire   [31:0] line_buffer_Array_V_5_0_3_q0;
reg    line_buffer_Array_V_5_1_3_ce0;
reg    line_buffer_Array_V_5_1_3_we0;
wire   [31:0] line_buffer_Array_V_5_1_3_q0;
reg    line_buffer_Array_V_5_0_4_ce0;
reg    line_buffer_Array_V_5_0_4_we0;
wire   [31:0] line_buffer_Array_V_5_0_4_q0;
reg    line_buffer_Array_V_5_1_4_ce0;
reg    line_buffer_Array_V_5_1_4_we0;
wire   [31:0] line_buffer_Array_V_5_1_4_q0;
reg    line_buffer_Array_V_5_0_5_ce0;
reg    line_buffer_Array_V_5_0_5_we0;
wire   [31:0] line_buffer_Array_V_5_0_5_q0;
reg    line_buffer_Array_V_5_1_5_ce0;
reg    line_buffer_Array_V_5_1_5_we0;
wire   [31:0] line_buffer_Array_V_5_1_5_q0;
reg    line_buffer_Array_V_5_0_6_ce0;
reg    line_buffer_Array_V_5_0_6_we0;
wire   [31:0] line_buffer_Array_V_5_0_6_q0;
reg    line_buffer_Array_V_5_1_6_ce0;
reg    line_buffer_Array_V_5_1_6_we0;
wire   [31:0] line_buffer_Array_V_5_1_6_q0;
reg    line_buffer_Array_V_5_0_7_ce0;
reg    line_buffer_Array_V_5_0_7_we0;
wire   [31:0] line_buffer_Array_V_5_0_7_q0;
reg    line_buffer_Array_V_5_1_7_ce0;
reg    line_buffer_Array_V_5_1_7_we0;
wire   [31:0] line_buffer_Array_V_5_1_7_q0;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
end

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_0_ce0),
    .we0(line_buffer_Array_V_5_0_0_we0),
    .d0(in_elem_data_0_V_read),
    .q0(line_buffer_Array_V_5_0_0_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_0_ce0),
    .we0(line_buffer_Array_V_5_1_0_we0),
    .d0(line_buffer_Array_V_5_0_0_q0),
    .q0(line_buffer_Array_V_5_1_0_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_1_ce0),
    .we0(line_buffer_Array_V_5_0_1_we0),
    .d0(in_elem_data_1_V_read),
    .q0(line_buffer_Array_V_5_0_1_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_1_ce0),
    .we0(line_buffer_Array_V_5_1_1_we0),
    .d0(line_buffer_Array_V_5_0_1_q0),
    .q0(line_buffer_Array_V_5_1_1_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_2_ce0),
    .we0(line_buffer_Array_V_5_0_2_we0),
    .d0(in_elem_data_2_V_read),
    .q0(line_buffer_Array_V_5_0_2_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_2_ce0),
    .we0(line_buffer_Array_V_5_1_2_we0),
    .d0(line_buffer_Array_V_5_0_2_q0),
    .q0(line_buffer_Array_V_5_1_2_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_3_ce0),
    .we0(line_buffer_Array_V_5_0_3_we0),
    .d0(in_elem_data_3_V_read),
    .q0(line_buffer_Array_V_5_0_3_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_3_ce0),
    .we0(line_buffer_Array_V_5_1_3_we0),
    .d0(line_buffer_Array_V_5_0_3_q0),
    .q0(line_buffer_Array_V_5_1_3_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_4_ce0),
    .we0(line_buffer_Array_V_5_0_4_we0),
    .d0(in_elem_data_4_V_read),
    .q0(line_buffer_Array_V_5_0_4_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_4_ce0),
    .we0(line_buffer_Array_V_5_1_4_we0),
    .d0(line_buffer_Array_V_5_0_4_q0),
    .q0(line_buffer_Array_V_5_1_4_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_5_ce0),
    .we0(line_buffer_Array_V_5_0_5_we0),
    .d0(in_elem_data_5_V_read),
    .q0(line_buffer_Array_V_5_0_5_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_5_ce0),
    .we0(line_buffer_Array_V_5_1_5_we0),
    .d0(line_buffer_Array_V_5_0_5_q0),
    .q0(line_buffer_Array_V_5_1_5_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_6_ce0),
    .we0(line_buffer_Array_V_5_0_6_we0),
    .d0(in_elem_data_6_V_read),
    .q0(line_buffer_Array_V_5_0_6_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_6_ce0),
    .we0(line_buffer_Array_V_5_1_6_we0),
    .d0(line_buffer_Array_V_5_0_6_q0),
    .q0(line_buffer_Array_V_5_1_6_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_0_7_ce0),
    .we0(line_buffer_Array_V_5_0_7_we0),
    .d0(in_elem_data_7_V_read),
    .q0(line_buffer_Array_V_5_0_7_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s_line_bufferbkb #(
    .DataWidth( 32 ),
    .AddressRange( 34 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_5_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd33),
    .ce0(line_buffer_Array_V_5_1_7_ce0),
    .we0(line_buffer_Array_V_5_1_7_we0),
    .d0(line_buffer_Array_V_5_0_7_q0),
    .q0(line_buffer_Array_V_5_1_7_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_4_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_4_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_5_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_5_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_6_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_6_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_7_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_0_7_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_4_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_4_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_5_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_5_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_6_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_6_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_7_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_buffer_Array_V_5_1_7_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_5_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_return_0 = kernel_window_8_V_read;

assign ap_return_1 = kernel_window_9_V_read;

assign ap_return_10 = kernel_window_34_V_read;

assign ap_return_11 = kernel_window_35_V_read;

assign ap_return_12 = kernel_window_36_V_read;

assign ap_return_13 = kernel_window_37_V_read;

assign ap_return_14 = kernel_window_38_V_read;

assign ap_return_15 = kernel_window_39_V_read;

assign ap_return_16 = kernel_window_56_V_read;

assign ap_return_17 = kernel_window_57_V_read;

assign ap_return_18 = kernel_window_58_V_read;

assign ap_return_19 = kernel_window_59_V_read;

assign ap_return_2 = kernel_window_10_V_read;

assign ap_return_20 = kernel_window_60_V_read;

assign ap_return_21 = kernel_window_61_V_read;

assign ap_return_22 = kernel_window_62_V_read;

assign ap_return_23 = kernel_window_63_V_read;

assign ap_return_24 = kernel_window_16_V_read;

assign ap_return_25 = kernel_window_17_V_read;

assign ap_return_26 = kernel_window_18_V_read;

assign ap_return_27 = kernel_window_19_V_read;

assign ap_return_28 = kernel_window_20_V_read;

assign ap_return_29 = kernel_window_21_V_read;

assign ap_return_3 = kernel_window_11_V_read;

assign ap_return_30 = kernel_window_22_V_read;

assign ap_return_31 = kernel_window_23_V_read;

assign ap_return_32 = line_buffer_Array_V_5_1_0_q0;

assign ap_return_33 = line_buffer_Array_V_5_1_1_q0;

assign ap_return_34 = line_buffer_Array_V_5_1_2_q0;

assign ap_return_35 = line_buffer_Array_V_5_1_3_q0;

assign ap_return_36 = line_buffer_Array_V_5_1_4_q0;

assign ap_return_37 = line_buffer_Array_V_5_1_5_q0;

assign ap_return_38 = line_buffer_Array_V_5_1_6_q0;

assign ap_return_39 = line_buffer_Array_V_5_1_7_q0;

assign ap_return_4 = kernel_window_12_V_read;

assign ap_return_40 = kernel_window_40_V_read;

assign ap_return_41 = kernel_window_41_V_read;

assign ap_return_42 = kernel_window_42_V_read;

assign ap_return_43 = kernel_window_43_V_read;

assign ap_return_44 = kernel_window_44_V_read;

assign ap_return_45 = kernel_window_45_V_read;

assign ap_return_46 = kernel_window_46_V_read;

assign ap_return_47 = kernel_window_47_V_read;

assign ap_return_48 = line_buffer_Array_V_5_0_0_q0;

assign ap_return_49 = line_buffer_Array_V_5_0_1_q0;

assign ap_return_5 = kernel_window_13_V_read;

assign ap_return_50 = line_buffer_Array_V_5_0_2_q0;

assign ap_return_51 = line_buffer_Array_V_5_0_3_q0;

assign ap_return_52 = line_buffer_Array_V_5_0_4_q0;

assign ap_return_53 = line_buffer_Array_V_5_0_5_q0;

assign ap_return_54 = line_buffer_Array_V_5_0_6_q0;

assign ap_return_55 = line_buffer_Array_V_5_0_7_q0;

assign ap_return_56 = kernel_window_64_V_read;

assign ap_return_57 = kernel_window_65_V_read;

assign ap_return_58 = kernel_window_66_V_read;

assign ap_return_59 = kernel_window_67_V_read;

assign ap_return_6 = kernel_window_14_V_read;

assign ap_return_60 = kernel_window_68_V_read;

assign ap_return_61 = kernel_window_69_V_read;

assign ap_return_62 = kernel_window_70_V_read;

assign ap_return_63 = kernel_window_71_V_read;

assign ap_return_64 = in_elem_data_0_V_read;

assign ap_return_65 = in_elem_data_1_V_read;

assign ap_return_66 = in_elem_data_2_V_read;

assign ap_return_67 = in_elem_data_3_V_read;

assign ap_return_68 = in_elem_data_4_V_read;

assign ap_return_69 = in_elem_data_5_V_read;

assign ap_return_7 = kernel_window_15_V_read;

assign ap_return_70 = in_elem_data_6_V_read;

assign ap_return_71 = in_elem_data_7_V_read;

assign ap_return_8 = kernel_window_32_V_read;

assign ap_return_9 = kernel_window_33_V_read;

endmodule //shift_line_buffer_array_ap_fixed_8u_config20_s
