-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pooling2d_cl_array_array_ap_fixed_8u_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of pooling2d_cl_array_array_ap_fixed_8u_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_9_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln233_reg_1037 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal and_ln185_2_reg_1246 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_184 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln233_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op187 : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln233_reg_1037_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln233_fu_256_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln233_reg_1041 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_data_0_V_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal io_acc_block_signal_op29 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_V_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_V_reg_1056 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_V_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_4_V_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_5_V_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_6_V_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_7_V_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_7_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_6_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_5_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_4_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_3_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_2_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_2_V_1_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_7_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_6_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_5_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_4_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_3_reg_1146 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_2_reg_1151 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_0_V_1_reg_1161 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_1_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_2_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_3_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_4_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_5_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_6_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_1_V_7_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_1_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_2_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_3_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_4_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_5_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_6_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_3_V_7_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln185_2_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_1250 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_1255 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_1260 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_reg_1265 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_6_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_6_reg_1270 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_reg_1275 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_9_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_9_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_10_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_10_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_12_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_12_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_13_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_13_reg_1295 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_15_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_15_reg_1300 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_16_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_16_reg_1305 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_18_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_18_reg_1310 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_19_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_19_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_21_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_21_reg_1320 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_22_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_22_reg_1325 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln203_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln203_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln218_fu_776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln218_reg_1334 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln207_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln207_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln213_fu_820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln213_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_32_fu_850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_32_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_V_30_fu_874_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_1_V_30_reg_1353 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_V_30_fu_898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_2_V_30_reg_1358 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_V_30_fu_922_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_3_V_30_reg_1363 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_4_V_16_fu_946_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_4_V_16_reg_1368 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_5_V_16_fu_970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_5_V_16_reg_1373 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_6_V_16_fu_994_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_6_V_16_reg_1378 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_7_V_16_fu_1018_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_7_V_16_reg_1383 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0_ignore_call30 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1_ignore_call30 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call30 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp54 : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_188_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_195 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg : STD_LOGIC := '0';
    signal add_ln216_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln211_fu_802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln185_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_1_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_2_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_3_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln185_1_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln185_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln218_fu_770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln213_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_fu_834_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_1_fu_839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_2_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_3_fu_858_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_4_fu_863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_5_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_6_fu_882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_7_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_8_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_9_fu_906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_10_fu_911_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_11_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_12_fu_930_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_13_fu_935_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_14_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_15_fu_954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_16_fu_959_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_17_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_18_fu_978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_19_fu_983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_20_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_21_fu_1002_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_22_fu_1007_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_23_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_466 : BOOLEAN;
    signal ap_condition_461 : BOOLEAN;
    signal ap_condition_451 : BOOLEAN;
    signal ap_condition_1972 : BOOLEAN;
    signal ap_condition_333 : BOOLEAN;
    signal ap_condition_1977 : BOOLEAN;

    component shift_line_buffer_array_ap_fixed_8u_config4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_4_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_5_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_6_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_elem_data_7_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_12_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_13_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_14_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_15_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_24_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_25_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_26_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_27_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206 : component shift_line_buffer_array_ap_fixed_8u_config4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ready,
        in_elem_data_0_V_read => tmp_data_0_V_reg_1046,
        in_elem_data_1_V_read => tmp_data_1_V_reg_1051,
        in_elem_data_2_V_read => tmp_data_2_V_reg_1056,
        in_elem_data_3_V_read => tmp_data_3_V_reg_1061,
        in_elem_data_4_V_read => tmp_data_4_V_reg_1066,
        in_elem_data_5_V_read => tmp_data_5_V_reg_1071,
        in_elem_data_6_V_read => tmp_data_6_V_reg_1076,
        in_elem_data_7_V_read => tmp_data_7_V_reg_1081,
        kernel_window_8_V_read => kernel_data_V_9_8,
        kernel_window_9_V_read => kernel_data_V_9_9,
        kernel_window_10_V_read => kernel_data_V_9_10,
        kernel_window_11_V_read => kernel_data_V_9_11,
        kernel_window_12_V_read => kernel_data_V_9_12,
        kernel_window_13_V_read => kernel_data_V_9_13,
        kernel_window_14_V_read => kernel_data_V_9_14,
        kernel_window_15_V_read => kernel_data_V_9_15,
        kernel_window_24_V_read => kernel_data_V_9_24,
        kernel_window_25_V_read => kernel_data_V_9_25,
        kernel_window_26_V_read => kernel_data_V_9_26,
        kernel_window_27_V_read => kernel_data_V_9_27,
        kernel_window_28_V_read => kernel_data_V_9_28,
        kernel_window_29_V_read => kernel_data_V_9_29,
        kernel_window_30_V_read => kernel_data_V_9_30,
        kernel_window_31_V_read => kernel_data_V_9_31,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8,
        ap_return_9 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9,
        ap_return_10 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10,
        ap_return_11 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11,
        ap_return_12 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12,
        ap_return_13 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13,
        ap_return_14 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14,
        ap_return_15 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15,
        ap_return_16 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16,
        ap_return_17 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17,
        ap_return_18 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18,
        ap_return_19 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19,
        ap_return_20 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20,
        ap_return_21 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21,
        ap_return_22 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22,
        ap_return_23 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23,
        ap_return_24 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24,
        ap_return_25 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25,
        ap_return_26 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26,
        ap_return_27 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27,
        ap_return_28 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28,
        ap_return_29 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29,
        ap_return_30 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30,
        ap_return_31 => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31,
        ap_ce => call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
                    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg <= ap_const_logic_1;
                elsif ((call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ready = ap_const_logic_1)) then 
                    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln207_fu_796_p2 = ap_const_lv1_1) and (icmp_ln203_fu_752_p2 = ap_const_lv1_1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_195;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_461)) then
                if ((ap_const_boolean_1 = ap_condition_466)) then 
                    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195 <= select_ln213_reg_1343;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
                indvar_flatten_reg_184 <= add_ln233_reg_1041;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_184 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    pX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_451)) then
                if ((icmp_ln203_fu_752_p2 = ap_const_lv1_1)) then 
                    pX <= ap_const_lv32_0;
                elsif ((icmp_ln203_fu_752_p2 = ap_const_lv1_0)) then 
                    pX <= add_ln216_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1972)) then
                if ((icmp_ln207_fu_796_p2 = ap_const_lv1_1)) then 
                    pY <= ap_const_lv32_0;
                elsif ((icmp_ln207_fu_796_p2 = ap_const_lv1_0)) then 
                    pY <= add_ln211_fu_802_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_1977)) then 
                    sX <= select_ln218_reg_1334;
                elsif ((ap_const_boolean_1 = ap_condition_333)) then 
                    sX <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln233_reg_1041 <= add_ln233_fu_256_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then
                and_ln185_2_reg_1246 <= and_ln185_2_fu_650_p2;
                pool_window_0_V_1_reg_1161 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0;
                pool_window_0_V_2_reg_1151 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2;
                pool_window_0_V_3_reg_1146 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3;
                pool_window_0_V_4_reg_1141 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4;
                pool_window_0_V_5_reg_1136 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5;
                pool_window_0_V_6_reg_1131 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6;
                pool_window_0_V_7_reg_1126 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7;
                pool_window_0_V_reg_1156 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1;
                pool_window_1_V_1_reg_1166 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16;
                pool_window_1_V_2_reg_1176 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18;
                pool_window_1_V_3_reg_1181 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19;
                pool_window_1_V_4_reg_1186 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20;
                pool_window_1_V_5_reg_1191 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21;
                pool_window_1_V_6_reg_1196 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22;
                pool_window_1_V_7_reg_1201 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23;
                pool_window_1_V_reg_1171 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17;
                pool_window_2_V_1_reg_1121 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8;
                pool_window_2_V_2_reg_1111 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10;
                pool_window_2_V_3_reg_1106 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11;
                pool_window_2_V_4_reg_1101 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12;
                pool_window_2_V_5_reg_1096 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13;
                pool_window_2_V_6_reg_1091 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14;
                pool_window_2_V_7_reg_1086 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15;
                pool_window_2_V_reg_1116 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9;
                pool_window_3_V_1_reg_1206 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24;
                pool_window_3_V_2_reg_1216 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26;
                pool_window_3_V_3_reg_1221 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27;
                pool_window_3_V_4_reg_1226 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28;
                pool_window_3_V_5_reg_1231 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29;
                pool_window_3_V_6_reg_1236 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30;
                pool_window_3_V_7_reg_1241 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31;
                pool_window_3_V_reg_1211 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_fu_650_p2))) then
                icmp_ln1496_10_reg_1285 <= icmp_ln1496_10_fu_698_p2;
                icmp_ln1496_12_reg_1290 <= icmp_ln1496_12_fu_704_p2;
                icmp_ln1496_13_reg_1295 <= icmp_ln1496_13_fu_710_p2;
                icmp_ln1496_15_reg_1300 <= icmp_ln1496_15_fu_716_p2;
                icmp_ln1496_16_reg_1305 <= icmp_ln1496_16_fu_722_p2;
                icmp_ln1496_18_reg_1310 <= icmp_ln1496_18_fu_728_p2;
                icmp_ln1496_19_reg_1315 <= icmp_ln1496_19_fu_734_p2;
                icmp_ln1496_1_reg_1255 <= icmp_ln1496_1_fu_662_p2;
                icmp_ln1496_21_reg_1320 <= icmp_ln1496_21_fu_740_p2;
                icmp_ln1496_22_reg_1325 <= icmp_ln1496_22_fu_746_p2;
                icmp_ln1496_3_reg_1260 <= icmp_ln1496_3_fu_668_p2;
                icmp_ln1496_4_reg_1265 <= icmp_ln1496_4_fu_674_p2;
                icmp_ln1496_6_reg_1270 <= icmp_ln1496_6_fu_680_p2;
                icmp_ln1496_7_reg_1275 <= icmp_ln1496_7_fu_686_p2;
                icmp_ln1496_9_reg_1280 <= icmp_ln1496_9_fu_692_p2;
                icmp_ln1496_reg_1250 <= icmp_ln1496_fu_656_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln203_reg_1330 <= icmp_ln203_fu_752_p2;
                icmp_ln233_reg_1037 <= icmp_ln233_fu_250_p2;
                icmp_ln233_reg_1037_pp0_iter1_reg <= icmp_ln233_reg_1037;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln203_fu_752_p2 = ap_const_lv1_1))) then
                icmp_ln207_reg_1339 <= icmp_ln207_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then
                kernel_data_V_9_10 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18;
                kernel_data_V_9_11 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19;
                kernel_data_V_9_12 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20;
                kernel_data_V_9_13 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21;
                kernel_data_V_9_14 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22;
                kernel_data_V_9_15 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23;
                kernel_data_V_9_24 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24;
                kernel_data_V_9_25 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25;
                kernel_data_V_9_26 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26;
                kernel_data_V_9_27 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27;
                kernel_data_V_9_28 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28;
                kernel_data_V_9_29 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29;
                kernel_data_V_9_30 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30;
                kernel_data_V_9_31 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31;
                kernel_data_V_9_8 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16;
                kernel_data_V_9_9 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln203_reg_1330 = ap_const_lv1_1))) then
                sY <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln203_fu_752_p2 = ap_const_lv1_1) and (icmp_ln207_fu_796_p2 = ap_const_lv1_0) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then
                select_ln213_reg_1343 <= select_ln213_fu_820_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln203_fu_752_p2 = ap_const_lv1_0))) then
                select_ln218_reg_1334 <= select_ln218_fu_776_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then
                tmp_data_0_V_32_reg_1348 <= tmp_data_0_V_32_fu_850_p3;
                tmp_data_1_V_30_reg_1353 <= tmp_data_1_V_30_fu_874_p3;
                tmp_data_2_V_30_reg_1358 <= tmp_data_2_V_30_fu_898_p3;
                tmp_data_3_V_30_reg_1363 <= tmp_data_3_V_30_fu_922_p3;
                tmp_data_4_V_16_reg_1368 <= tmp_data_4_V_16_fu_946_p3;
                tmp_data_5_V_16_reg_1373 <= tmp_data_5_V_16_fu_970_p3;
                tmp_data_6_V_16_reg_1378 <= tmp_data_6_V_16_fu_994_p3;
                tmp_data_7_V_16_reg_1383 <= tmp_data_7_V_16_fu_1018_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1046 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_1051 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_1056 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_1061 <= data_V_data_3_V_dout;
                tmp_data_4_V_reg_1066 <= data_V_data_4_V_dout;
                tmp_data_5_V_reg_1071 <= data_V_data_5_V_dout;
                tmp_data_6_V_reg_1076 <= data_V_data_6_V_dout;
                tmp_data_7_V_reg_1081 <= data_V_data_7_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln233_fu_250_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln233_fu_250_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln233_fu_250_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln211_fu_802_p2 <= std_logic_vector(unsigned(pY) + unsigned(ap_const_lv32_1));
    add_ln213_fu_814_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_load) + unsigned(ap_const_lv32_1));
    add_ln216_fu_758_p2 <= std_logic_vector(unsigned(pX) + unsigned(ap_const_lv32_1));
    add_ln218_fu_770_p2 <= std_logic_vector(unsigned(sX) + unsigned(ap_const_lv32_1));
    add_ln233_fu_256_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_188_p4) + unsigned(ap_const_lv11_1));
    and_ln185_1_fu_644_p2 <= (icmp_ln185_3_fu_632_p2 and icmp_ln185_2_fu_622_p2);
    and_ln185_2_fu_650_p2 <= (and_ln185_fu_638_p2 and and_ln185_1_fu_644_p2);
    and_ln185_fu_638_p2 <= (icmp_ln185_fu_602_p2 and icmp_ln185_1_fu_612_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, io_acc_block_signal_op187)
    begin
                ap_block_pp0_stage0_01001 <= ((io_acc_block_signal_op187 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1246));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, io_acc_block_signal_op187)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op187 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1246));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp54_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, io_acc_block_signal_op187)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp54 <= ((io_acc_block_signal_op187 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1246));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, io_acc_block_signal_op187)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op187 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1246));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, io_acc_block_signal_op29)
    begin
                ap_block_pp0_stage1_11001 <= ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln233_reg_1037 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, io_acc_block_signal_op29)
    begin
                ap_block_pp0_stage1_subdone <= ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln233_reg_1037 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln233_reg_1037, io_acc_block_signal_op29)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((io_acc_block_signal_op29 = ap_const_logic_0) and (icmp_ln233_reg_1037 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(and_ln185_2_reg_1246, io_acc_block_signal_op187)
    begin
                ap_block_state6_pp0_stage0_iter2 <= ((io_acc_block_signal_op187 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln185_2_reg_1246));
    end process;


    ap_block_state6_pp0_stage0_iter2_ignore_call30_assign_proc : process(and_ln185_2_reg_1246, io_acc_block_signal_op187)
    begin
                ap_block_state6_pp0_stage0_iter2_ignore_call30 <= ((io_acc_block_signal_op187 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln185_2_reg_1246));
    end process;


    ap_condition_1972_assign_proc : process(icmp_ln233_reg_1037, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln203_fu_752_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1972 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln203_fu_752_p2 = ap_const_lv1_1) and (icmp_ln233_reg_1037 = ap_const_lv1_0));
    end process;


    ap_condition_1977_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln203_reg_1330)
    begin
                ap_condition_1977 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln203_reg_1330 = ap_const_lv1_0));
    end process;


    ap_condition_333_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln203_fu_752_p2)
    begin
                ap_condition_333 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln203_fu_752_p2 = ap_const_lv1_1));
    end process;


    ap_condition_451_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_451 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_461_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_461 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_466_assign_proc : process(icmp_ln233_reg_1037_pp0_iter1_reg, icmp_ln203_reg_1330, icmp_ln207_reg_1339)
    begin
                ap_condition_466 <= ((icmp_ln203_reg_1330 = ap_const_lv1_1) and (icmp_ln207_reg_1339 = ap_const_lv1_0) and (icmp_ln233_reg_1037_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln233_fu_250_p2)
    begin
        if ((icmp_ln233_fu_250_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_188_p4_assign_proc : process(icmp_ln233_reg_1037, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_reg_184, add_ln233_reg_1041, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_188_p4 <= add_ln233_reg_1041;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_188_p4 <= indvar_flatten_reg_184;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_195 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_sY_load_assign_proc : process(sY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln203_reg_1330, ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln203_reg_1330 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_sY_load <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195;
        else 
            ap_sig_allocacmp_sY_load <= sY;
        end if; 
    end process;


    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp54)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln233_reg_1037)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln233_reg_1037, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln233_reg_1037 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_10_fu_698_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27)) else "0";
    icmp_ln1496_11_fu_916_p2 <= "1" when (signed(select_ln86_9_fu_906_p3) < signed(select_ln86_10_fu_911_p3)) else "0";
    icmp_ln1496_12_fu_704_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20)) else "0";
    icmp_ln1496_13_fu_710_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28)) else "0";
    icmp_ln1496_14_fu_940_p2 <= "1" when (signed(select_ln86_12_fu_930_p3) < signed(select_ln86_13_fu_935_p3)) else "0";
    icmp_ln1496_15_fu_716_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21)) else "0";
    icmp_ln1496_16_fu_722_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29)) else "0";
    icmp_ln1496_17_fu_964_p2 <= "1" when (signed(select_ln86_15_fu_954_p3) < signed(select_ln86_16_fu_959_p3)) else "0";
    icmp_ln1496_18_fu_728_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22)) else "0";
    icmp_ln1496_19_fu_734_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30)) else "0";
    icmp_ln1496_1_fu_662_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24)) else "0";
    icmp_ln1496_20_fu_988_p2 <= "1" when (signed(select_ln86_18_fu_978_p3) < signed(select_ln86_19_fu_983_p3)) else "0";
    icmp_ln1496_21_fu_740_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23)) else "0";
    icmp_ln1496_22_fu_746_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31)) else "0";
    icmp_ln1496_23_fu_1012_p2 <= "1" when (signed(select_ln86_21_fu_1002_p3) < signed(select_ln86_22_fu_1007_p3)) else "0";
    icmp_ln1496_2_fu_844_p2 <= "1" when (signed(select_ln86_fu_834_p3) < signed(select_ln86_1_fu_839_p3)) else "0";
    icmp_ln1496_3_fu_668_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17)) else "0";
    icmp_ln1496_4_fu_674_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25)) else "0";
    icmp_ln1496_5_fu_868_p2 <= "1" when (signed(select_ln86_3_fu_858_p3) < signed(select_ln86_4_fu_863_p3)) else "0";
    icmp_ln1496_6_fu_680_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18)) else "0";
    icmp_ln1496_7_fu_686_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26)) else "0";
    icmp_ln1496_8_fu_892_p2 <= "1" when (signed(select_ln86_6_fu_882_p3) < signed(select_ln86_7_fu_887_p3)) else "0";
    icmp_ln1496_9_fu_692_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19)) else "0";
    icmp_ln1496_fu_656_p2 <= "1" when (signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0) < signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16)) else "0";
    icmp_ln185_1_fu_612_p2 <= "1" when (ap_sig_allocacmp_sY_load = ap_const_lv32_1) else "0";
    icmp_ln185_2_fu_622_p2 <= "1" when (signed(pY) > signed(ap_const_lv32_0)) else "0";
    icmp_ln185_3_fu_632_p2 <= "1" when (signed(pX) > signed(ap_const_lv32_0)) else "0";
    icmp_ln185_fu_602_p2 <= "1" when (sX = ap_const_lv32_1) else "0";
    icmp_ln203_fu_752_p2 <= "1" when (pX = ap_const_lv32_1F) else "0";
    icmp_ln207_fu_796_p2 <= "1" when (pY = ap_const_lv32_1F) else "0";
    icmp_ln233_fu_250_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_188_p4 = ap_const_lv11_400) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op187 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op29 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_32_reg_1348;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_30_reg_1353;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_30_reg_1358;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_30_reg_1363;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_16_reg_1368;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_16_reg_1373;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_16_reg_1378;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, and_ln185_2_reg_1246)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln185_2_reg_1246) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_16_reg_1383;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln185_2_reg_1246, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_reg_1246))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln213_fu_820_p3 <= 
        ap_const_lv32_0 when (icmp_ln185_1_fu_612_p2(0) = '1') else 
        add_ln213_fu_814_p2;
    select_ln218_fu_776_p3 <= 
        ap_const_lv32_0 when (icmp_ln185_fu_602_p2(0) = '1') else 
        add_ln218_fu_770_p2;
    select_ln86_10_fu_911_p3 <= 
        pool_window_3_V_3_reg_1221 when (icmp_ln1496_10_reg_1285(0) = '1') else 
        pool_window_2_V_3_reg_1106;
    select_ln86_12_fu_930_p3 <= 
        pool_window_1_V_4_reg_1186 when (icmp_ln1496_12_reg_1290(0) = '1') else 
        pool_window_0_V_4_reg_1141;
    select_ln86_13_fu_935_p3 <= 
        pool_window_3_V_4_reg_1226 when (icmp_ln1496_13_reg_1295(0) = '1') else 
        pool_window_2_V_4_reg_1101;
    select_ln86_15_fu_954_p3 <= 
        pool_window_1_V_5_reg_1191 when (icmp_ln1496_15_reg_1300(0) = '1') else 
        pool_window_0_V_5_reg_1136;
    select_ln86_16_fu_959_p3 <= 
        pool_window_3_V_5_reg_1231 when (icmp_ln1496_16_reg_1305(0) = '1') else 
        pool_window_2_V_5_reg_1096;
    select_ln86_18_fu_978_p3 <= 
        pool_window_1_V_6_reg_1196 when (icmp_ln1496_18_reg_1310(0) = '1') else 
        pool_window_0_V_6_reg_1131;
    select_ln86_19_fu_983_p3 <= 
        pool_window_3_V_6_reg_1236 when (icmp_ln1496_19_reg_1315(0) = '1') else 
        pool_window_2_V_6_reg_1091;
    select_ln86_1_fu_839_p3 <= 
        pool_window_3_V_1_reg_1206 when (icmp_ln1496_1_reg_1255(0) = '1') else 
        pool_window_2_V_1_reg_1121;
    select_ln86_21_fu_1002_p3 <= 
        pool_window_1_V_7_reg_1201 when (icmp_ln1496_21_reg_1320(0) = '1') else 
        pool_window_0_V_7_reg_1126;
    select_ln86_22_fu_1007_p3 <= 
        pool_window_3_V_7_reg_1241 when (icmp_ln1496_22_reg_1325(0) = '1') else 
        pool_window_2_V_7_reg_1086;
    select_ln86_3_fu_858_p3 <= 
        pool_window_1_V_reg_1171 when (icmp_ln1496_3_reg_1260(0) = '1') else 
        pool_window_0_V_reg_1156;
    select_ln86_4_fu_863_p3 <= 
        pool_window_3_V_reg_1211 when (icmp_ln1496_4_reg_1265(0) = '1') else 
        pool_window_2_V_reg_1116;
    select_ln86_6_fu_882_p3 <= 
        pool_window_1_V_2_reg_1176 when (icmp_ln1496_6_reg_1270(0) = '1') else 
        pool_window_0_V_2_reg_1151;
    select_ln86_7_fu_887_p3 <= 
        pool_window_3_V_2_reg_1216 when (icmp_ln1496_7_reg_1275(0) = '1') else 
        pool_window_2_V_2_reg_1111;
    select_ln86_9_fu_906_p3 <= 
        pool_window_1_V_3_reg_1181 when (icmp_ln1496_9_reg_1280(0) = '1') else 
        pool_window_0_V_3_reg_1146;
    select_ln86_fu_834_p3 <= 
        pool_window_1_V_1_reg_1166 when (icmp_ln1496_reg_1250(0) = '1') else 
        pool_window_0_V_1_reg_1161;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_data_0_V_32_fu_850_p3 <= 
        select_ln86_1_fu_839_p3 when (icmp_ln1496_2_fu_844_p2(0) = '1') else 
        select_ln86_fu_834_p3;
    tmp_data_1_V_30_fu_874_p3 <= 
        select_ln86_4_fu_863_p3 when (icmp_ln1496_5_fu_868_p2(0) = '1') else 
        select_ln86_3_fu_858_p3;
    tmp_data_2_V_30_fu_898_p3 <= 
        select_ln86_7_fu_887_p3 when (icmp_ln1496_8_fu_892_p2(0) = '1') else 
        select_ln86_6_fu_882_p3;
    tmp_data_3_V_30_fu_922_p3 <= 
        select_ln86_10_fu_911_p3 when (icmp_ln1496_11_fu_916_p2(0) = '1') else 
        select_ln86_9_fu_906_p3;
    tmp_data_4_V_16_fu_946_p3 <= 
        select_ln86_13_fu_935_p3 when (icmp_ln1496_14_fu_940_p2(0) = '1') else 
        select_ln86_12_fu_930_p3;
    tmp_data_5_V_16_fu_970_p3 <= 
        select_ln86_16_fu_959_p3 when (icmp_ln1496_17_fu_964_p2(0) = '1') else 
        select_ln86_15_fu_954_p3;
    tmp_data_6_V_16_fu_994_p3 <= 
        select_ln86_19_fu_983_p3 when (icmp_ln1496_20_fu_988_p2(0) = '1') else 
        select_ln86_18_fu_978_p3;
    tmp_data_7_V_16_fu_1018_p3 <= 
        select_ln86_22_fu_1007_p3 when (icmp_ln1496_23_fu_1012_p2(0) = '1') else 
        select_ln86_21_fu_1002_p3;
end behav;
