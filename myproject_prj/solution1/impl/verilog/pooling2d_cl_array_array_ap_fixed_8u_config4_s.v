// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_8u_config4_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [31:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [31:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [31:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [31:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [31:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [31:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [31:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
output  [31:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [31:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [31:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [31:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [31:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [31:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [31:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [31:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [31:0] pY;
reg   [31:0] sY;
reg   [31:0] kernel_data_V_9_8;
reg   [31:0] kernel_data_V_9_9;
reg   [31:0] kernel_data_V_9_10;
reg   [31:0] kernel_data_V_9_11;
reg   [31:0] kernel_data_V_9_12;
reg   [31:0] kernel_data_V_9_13;
reg   [31:0] kernel_data_V_9_14;
reg   [31:0] kernel_data_V_9_15;
reg   [31:0] kernel_data_V_9_24;
reg   [31:0] kernel_data_V_9_25;
reg   [31:0] kernel_data_V_9_26;
reg   [31:0] kernel_data_V_9_27;
reg   [31:0] kernel_data_V_9_28;
reg   [31:0] kernel_data_V_9_29;
reg   [31:0] kernel_data_V_9_30;
reg   [31:0] kernel_data_V_9_31;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln233_reg_1037;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] and_ln185_2_reg_1246;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [10:0] indvar_flatten_reg_184;
wire   [0:0] icmp_ln233_fu_250_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    io_acc_block_signal_op187;
reg    ap_block_state6_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln233_reg_1037_pp0_iter1_reg;
wire   [10:0] add_ln233_fu_256_p2;
reg   [10:0] add_ln233_reg_1041;
reg   [31:0] tmp_data_0_V_reg_1046;
wire    io_acc_block_signal_op29;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] tmp_data_1_V_reg_1051;
reg   [31:0] tmp_data_2_V_reg_1056;
reg   [31:0] tmp_data_3_V_reg_1061;
reg   [31:0] tmp_data_4_V_reg_1066;
reg   [31:0] tmp_data_5_V_reg_1071;
reg   [31:0] tmp_data_6_V_reg_1076;
reg   [31:0] tmp_data_7_V_reg_1081;
reg   [31:0] pool_window_2_V_7_reg_1086;
reg   [31:0] pool_window_2_V_6_reg_1091;
reg   [31:0] pool_window_2_V_5_reg_1096;
reg   [31:0] pool_window_2_V_4_reg_1101;
reg   [31:0] pool_window_2_V_3_reg_1106;
reg   [31:0] pool_window_2_V_2_reg_1111;
reg   [31:0] pool_window_2_V_reg_1116;
reg   [31:0] pool_window_2_V_1_reg_1121;
reg   [31:0] pool_window_0_V_7_reg_1126;
reg   [31:0] pool_window_0_V_6_reg_1131;
reg   [31:0] pool_window_0_V_5_reg_1136;
reg   [31:0] pool_window_0_V_4_reg_1141;
reg   [31:0] pool_window_0_V_3_reg_1146;
reg   [31:0] pool_window_0_V_2_reg_1151;
reg   [31:0] pool_window_0_V_reg_1156;
reg   [31:0] pool_window_0_V_1_reg_1161;
reg   [31:0] pool_window_1_V_1_reg_1166;
reg   [31:0] pool_window_1_V_reg_1171;
reg   [31:0] pool_window_1_V_2_reg_1176;
reg   [31:0] pool_window_1_V_3_reg_1181;
reg   [31:0] pool_window_1_V_4_reg_1186;
reg   [31:0] pool_window_1_V_5_reg_1191;
reg   [31:0] pool_window_1_V_6_reg_1196;
reg   [31:0] pool_window_1_V_7_reg_1201;
reg   [31:0] pool_window_3_V_1_reg_1206;
reg   [31:0] pool_window_3_V_reg_1211;
reg   [31:0] pool_window_3_V_2_reg_1216;
reg   [31:0] pool_window_3_V_3_reg_1221;
reg   [31:0] pool_window_3_V_4_reg_1226;
reg   [31:0] pool_window_3_V_5_reg_1231;
reg   [31:0] pool_window_3_V_6_reg_1236;
reg   [31:0] pool_window_3_V_7_reg_1241;
wire   [0:0] and_ln185_2_fu_650_p2;
wire   [0:0] icmp_ln1496_fu_656_p2;
reg   [0:0] icmp_ln1496_reg_1250;
wire   [0:0] icmp_ln1496_1_fu_662_p2;
reg   [0:0] icmp_ln1496_1_reg_1255;
wire   [0:0] icmp_ln1496_3_fu_668_p2;
reg   [0:0] icmp_ln1496_3_reg_1260;
wire   [0:0] icmp_ln1496_4_fu_674_p2;
reg   [0:0] icmp_ln1496_4_reg_1265;
wire   [0:0] icmp_ln1496_6_fu_680_p2;
reg   [0:0] icmp_ln1496_6_reg_1270;
wire   [0:0] icmp_ln1496_7_fu_686_p2;
reg   [0:0] icmp_ln1496_7_reg_1275;
wire   [0:0] icmp_ln1496_9_fu_692_p2;
reg   [0:0] icmp_ln1496_9_reg_1280;
wire   [0:0] icmp_ln1496_10_fu_698_p2;
reg   [0:0] icmp_ln1496_10_reg_1285;
wire   [0:0] icmp_ln1496_12_fu_704_p2;
reg   [0:0] icmp_ln1496_12_reg_1290;
wire   [0:0] icmp_ln1496_13_fu_710_p2;
reg   [0:0] icmp_ln1496_13_reg_1295;
wire   [0:0] icmp_ln1496_15_fu_716_p2;
reg   [0:0] icmp_ln1496_15_reg_1300;
wire   [0:0] icmp_ln1496_16_fu_722_p2;
reg   [0:0] icmp_ln1496_16_reg_1305;
wire   [0:0] icmp_ln1496_18_fu_728_p2;
reg   [0:0] icmp_ln1496_18_reg_1310;
wire   [0:0] icmp_ln1496_19_fu_734_p2;
reg   [0:0] icmp_ln1496_19_reg_1315;
wire   [0:0] icmp_ln1496_21_fu_740_p2;
reg   [0:0] icmp_ln1496_21_reg_1320;
wire   [0:0] icmp_ln1496_22_fu_746_p2;
reg   [0:0] icmp_ln1496_22_reg_1325;
wire   [0:0] icmp_ln203_fu_752_p2;
reg   [0:0] icmp_ln203_reg_1330;
wire   [31:0] select_ln218_fu_776_p3;
reg   [31:0] select_ln218_reg_1334;
wire   [0:0] icmp_ln207_fu_796_p2;
reg   [0:0] icmp_ln207_reg_1339;
wire   [31:0] select_ln213_fu_820_p3;
reg   [31:0] select_ln213_reg_1343;
wire   [31:0] tmp_data_0_V_32_fu_850_p3;
reg   [31:0] tmp_data_0_V_32_reg_1348;
wire   [31:0] tmp_data_1_V_30_fu_874_p3;
reg   [31:0] tmp_data_1_V_30_reg_1353;
wire   [31:0] tmp_data_2_V_30_fu_898_p3;
reg   [31:0] tmp_data_2_V_30_reg_1358;
wire   [31:0] tmp_data_3_V_30_fu_922_p3;
reg   [31:0] tmp_data_3_V_30_reg_1363;
wire   [31:0] tmp_data_4_V_16_fu_946_p3;
reg   [31:0] tmp_data_4_V_16_reg_1368;
wire   [31:0] tmp_data_5_V_16_fu_970_p3;
reg   [31:0] tmp_data_5_V_16_reg_1373;
wire   [31:0] tmp_data_6_V_16_fu_994_p3;
reg   [31:0] tmp_data_6_V_16_reg_1378;
wire   [31:0] tmp_data_7_V_16_fu_1018_p3;
reg   [31:0] tmp_data_7_V_16_reg_1383;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ready;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31;
reg    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call30;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call30;
reg    ap_block_state6_pp0_stage0_iter2_ignore_call30;
reg    ap_block_pp0_stage0_11001_ignoreCallOp54;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_188_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_195;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195;
reg    call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg;
wire   [31:0] add_ln216_fu_758_p2;
wire   [31:0] add_ln211_fu_802_p2;
reg   [31:0] ap_sig_allocacmp_sY_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln185_fu_602_p2;
wire   [0:0] icmp_ln185_1_fu_612_p2;
wire   [0:0] icmp_ln185_2_fu_622_p2;
wire   [0:0] icmp_ln185_3_fu_632_p2;
wire   [0:0] and_ln185_1_fu_644_p2;
wire   [0:0] and_ln185_fu_638_p2;
wire   [31:0] add_ln218_fu_770_p2;
wire   [31:0] add_ln213_fu_814_p2;
wire   [31:0] select_ln86_fu_834_p3;
wire   [31:0] select_ln86_1_fu_839_p3;
wire   [0:0] icmp_ln1496_2_fu_844_p2;
wire   [31:0] select_ln86_3_fu_858_p3;
wire   [31:0] select_ln86_4_fu_863_p3;
wire   [0:0] icmp_ln1496_5_fu_868_p2;
wire   [31:0] select_ln86_6_fu_882_p3;
wire   [31:0] select_ln86_7_fu_887_p3;
wire   [0:0] icmp_ln1496_8_fu_892_p2;
wire   [31:0] select_ln86_9_fu_906_p3;
wire   [31:0] select_ln86_10_fu_911_p3;
wire   [0:0] icmp_ln1496_11_fu_916_p2;
wire   [31:0] select_ln86_12_fu_930_p3;
wire   [31:0] select_ln86_13_fu_935_p3;
wire   [0:0] icmp_ln1496_14_fu_940_p2;
wire   [31:0] select_ln86_15_fu_954_p3;
wire   [31:0] select_ln86_16_fu_959_p3;
wire   [0:0] icmp_ln1496_17_fu_964_p2;
wire   [31:0] select_ln86_18_fu_978_p3;
wire   [31:0] select_ln86_19_fu_983_p3;
wire   [0:0] icmp_ln1496_20_fu_988_p2;
wire   [31:0] select_ln86_21_fu_1002_p3;
wire   [31:0] select_ln86_22_fu_1007_p3;
wire   [0:0] icmp_ln1496_23_fu_1012_p2;
wire    ap_CS_fsm_state7;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_466;
reg    ap_condition_461;
reg    ap_condition_451;
reg    ap_condition_1972;
reg    ap_condition_333;
reg    ap_condition_1977;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 pY = 32'd0;
#0 sY = 32'd0;
#0 kernel_data_V_9_8 = 32'd0;
#0 kernel_data_V_9_9 = 32'd0;
#0 kernel_data_V_9_10 = 32'd0;
#0 kernel_data_V_9_11 = 32'd0;
#0 kernel_data_V_9_12 = 32'd0;
#0 kernel_data_V_9_13 = 32'd0;
#0 kernel_data_V_9_14 = 32'd0;
#0 kernel_data_V_9_15 = 32'd0;
#0 kernel_data_V_9_24 = 32'd0;
#0 kernel_data_V_9_25 = 32'd0;
#0 kernel_data_V_9_26 = 32'd0;
#0 kernel_data_V_9_27 = 32'd0;
#0 kernel_data_V_9_28 = 32'd0;
#0 kernel_data_V_9_29 = 32'd0;
#0 kernel_data_V_9_30 = 32'd0;
#0 kernel_data_V_9_31 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_8u_config4_s call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ready),
    .in_elem_data_0_V_read(tmp_data_0_V_reg_1046),
    .in_elem_data_1_V_read(tmp_data_1_V_reg_1051),
    .in_elem_data_2_V_read(tmp_data_2_V_reg_1056),
    .in_elem_data_3_V_read(tmp_data_3_V_reg_1061),
    .in_elem_data_4_V_read(tmp_data_4_V_reg_1066),
    .in_elem_data_5_V_read(tmp_data_5_V_reg_1071),
    .in_elem_data_6_V_read(tmp_data_6_V_reg_1076),
    .in_elem_data_7_V_read(tmp_data_7_V_reg_1081),
    .kernel_window_8_V_read(kernel_data_V_9_8),
    .kernel_window_9_V_read(kernel_data_V_9_9),
    .kernel_window_10_V_read(kernel_data_V_9_10),
    .kernel_window_11_V_read(kernel_data_V_9_11),
    .kernel_window_12_V_read(kernel_data_V_9_12),
    .kernel_window_13_V_read(kernel_data_V_9_13),
    .kernel_window_14_V_read(kernel_data_V_9_14),
    .kernel_window_15_V_read(kernel_data_V_9_15),
    .kernel_window_24_V_read(kernel_data_V_9_24),
    .kernel_window_25_V_read(kernel_data_V_9_25),
    .kernel_window_26_V_read(kernel_data_V_9_26),
    .kernel_window_27_V_read(kernel_data_V_9_27),
    .kernel_window_28_V_read(kernel_data_V_9_28),
    .kernel_window_29_V_read(kernel_data_V_9_29),
    .kernel_window_30_V_read(kernel_data_V_9_30),
    .kernel_window_31_V_read(kernel_data_V_9_31),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15),
    .ap_return_16(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16),
    .ap_return_17(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17),
    .ap_return_18(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18),
    .ap_return_19(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19),
    .ap_return_20(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20),
    .ap_return_21(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21),
    .ap_return_22(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22),
    .ap_return_23(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23),
    .ap_return_24(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24),
    .ap_return_25(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25),
    .ap_return_26(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26),
    .ap_return_27(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27),
    .ap_return_28(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28),
    .ap_return_29(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29),
    .ap_return_30(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30),
    .ap_return_31(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
            call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln207_fu_796_p2 == 1'd1) & (icmp_ln203_fu_752_p2 == 1'd1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_195;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_461)) begin
        if ((1'b1 == ap_condition_466)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195 <= select_ln213_reg_1343;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_195;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_1037 == 1'd0))) begin
        indvar_flatten_reg_184 <= add_ln233_reg_1041;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_184 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_451)) begin
        if ((icmp_ln203_fu_752_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln203_fu_752_p2 == 1'd0)) begin
            pX <= add_ln216_fu_758_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1972)) begin
        if ((icmp_ln207_fu_796_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln207_fu_796_p2 == 1'd0)) begin
            pY <= add_ln211_fu_802_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_1977)) begin
            sX <= select_ln218_reg_1334;
        end else if ((1'b1 == ap_condition_333)) begin
            sX <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln233_reg_1041 <= add_ln233_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_1037 == 1'd0))) begin
        and_ln185_2_reg_1246 <= and_ln185_2_fu_650_p2;
        pool_window_0_V_1_reg_1161 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0;
        pool_window_0_V_2_reg_1151 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2;
        pool_window_0_V_3_reg_1146 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3;
        pool_window_0_V_4_reg_1141 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4;
        pool_window_0_V_5_reg_1136 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5;
        pool_window_0_V_6_reg_1131 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6;
        pool_window_0_V_7_reg_1126 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7;
        pool_window_0_V_reg_1156 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1;
        pool_window_1_V_1_reg_1166 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16;
        pool_window_1_V_2_reg_1176 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18;
        pool_window_1_V_3_reg_1181 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19;
        pool_window_1_V_4_reg_1186 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20;
        pool_window_1_V_5_reg_1191 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21;
        pool_window_1_V_6_reg_1196 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22;
        pool_window_1_V_7_reg_1201 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23;
        pool_window_1_V_reg_1171 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17;
        pool_window_2_V_1_reg_1121 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8;
        pool_window_2_V_2_reg_1111 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10;
        pool_window_2_V_3_reg_1106 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11;
        pool_window_2_V_4_reg_1101 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12;
        pool_window_2_V_5_reg_1096 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13;
        pool_window_2_V_6_reg_1091 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14;
        pool_window_2_V_7_reg_1086 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15;
        pool_window_2_V_reg_1116 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9;
        pool_window_3_V_1_reg_1206 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24;
        pool_window_3_V_2_reg_1216 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26;
        pool_window_3_V_3_reg_1221 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27;
        pool_window_3_V_4_reg_1226 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28;
        pool_window_3_V_5_reg_1231 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29;
        pool_window_3_V_6_reg_1236 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30;
        pool_window_3_V_7_reg_1241 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31;
        pool_window_3_V_reg_1211 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_fu_650_p2))) begin
        icmp_ln1496_10_reg_1285 <= icmp_ln1496_10_fu_698_p2;
        icmp_ln1496_12_reg_1290 <= icmp_ln1496_12_fu_704_p2;
        icmp_ln1496_13_reg_1295 <= icmp_ln1496_13_fu_710_p2;
        icmp_ln1496_15_reg_1300 <= icmp_ln1496_15_fu_716_p2;
        icmp_ln1496_16_reg_1305 <= icmp_ln1496_16_fu_722_p2;
        icmp_ln1496_18_reg_1310 <= icmp_ln1496_18_fu_728_p2;
        icmp_ln1496_19_reg_1315 <= icmp_ln1496_19_fu_734_p2;
        icmp_ln1496_1_reg_1255 <= icmp_ln1496_1_fu_662_p2;
        icmp_ln1496_21_reg_1320 <= icmp_ln1496_21_fu_740_p2;
        icmp_ln1496_22_reg_1325 <= icmp_ln1496_22_fu_746_p2;
        icmp_ln1496_3_reg_1260 <= icmp_ln1496_3_fu_668_p2;
        icmp_ln1496_4_reg_1265 <= icmp_ln1496_4_fu_674_p2;
        icmp_ln1496_6_reg_1270 <= icmp_ln1496_6_fu_680_p2;
        icmp_ln1496_7_reg_1275 <= icmp_ln1496_7_fu_686_p2;
        icmp_ln1496_9_reg_1280 <= icmp_ln1496_9_fu_692_p2;
        icmp_ln1496_reg_1250 <= icmp_ln1496_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln203_reg_1330 <= icmp_ln203_fu_752_p2;
        icmp_ln233_reg_1037 <= icmp_ln233_fu_250_p2;
        icmp_ln233_reg_1037_pp0_iter1_reg <= icmp_ln233_reg_1037;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_752_p2 == 1'd1))) begin
        icmp_ln207_reg_1339 <= icmp_ln207_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_1037 == 1'd0))) begin
        kernel_data_V_9_10 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18;
        kernel_data_V_9_11 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19;
        kernel_data_V_9_12 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20;
        kernel_data_V_9_13 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21;
        kernel_data_V_9_14 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22;
        kernel_data_V_9_15 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23;
        kernel_data_V_9_24 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24;
        kernel_data_V_9_25 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25;
        kernel_data_V_9_26 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26;
        kernel_data_V_9_27 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27;
        kernel_data_V_9_28 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28;
        kernel_data_V_9_29 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29;
        kernel_data_V_9_30 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30;
        kernel_data_V_9_31 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31;
        kernel_data_V_9_8 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16;
        kernel_data_V_9_9 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_reg_1330 == 1'd1))) begin
        sY <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_752_p2 == 1'd1) & (icmp_ln207_fu_796_p2 == 1'd0) & (icmp_ln233_reg_1037 == 1'd0))) begin
        select_ln213_reg_1343 <= select_ln213_fu_820_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_752_p2 == 1'd0))) begin
        select_ln218_reg_1334 <= select_ln218_fu_776_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln185_2_reg_1246))) begin
        tmp_data_0_V_32_reg_1348 <= tmp_data_0_V_32_fu_850_p3;
        tmp_data_1_V_30_reg_1353 <= tmp_data_1_V_30_fu_874_p3;
        tmp_data_2_V_30_reg_1358 <= tmp_data_2_V_30_fu_898_p3;
        tmp_data_3_V_30_reg_1363 <= tmp_data_3_V_30_fu_922_p3;
        tmp_data_4_V_16_reg_1368 <= tmp_data_4_V_16_fu_946_p3;
        tmp_data_5_V_16_reg_1373 <= tmp_data_5_V_16_fu_970_p3;
        tmp_data_6_V_16_reg_1378 <= tmp_data_6_V_16_fu_994_p3;
        tmp_data_7_V_16_reg_1383 <= tmp_data_7_V_16_fu_1018_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        tmp_data_0_V_reg_1046 <= data_V_data_0_V_dout;
        tmp_data_1_V_reg_1051 <= data_V_data_1_V_dout;
        tmp_data_2_V_reg_1056 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_1061 <= data_V_data_3_V_dout;
        tmp_data_4_V_reg_1066 <= data_V_data_4_V_dout;
        tmp_data_5_V_reg_1071 <= data_V_data_5_V_dout;
        tmp_data_6_V_reg_1076 <= data_V_data_6_V_dout;
        tmp_data_7_V_reg_1081 <= data_V_data_7_V_dout;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_250_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln233_reg_1037 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_188_p4 = add_ln233_reg_1041;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_188_p4 = indvar_flatten_reg_184;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln203_reg_1330 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_sY_load = ap_phi_reg_pp0_iter2_storemerge_i_i_reg_195;
    end else begin
        ap_sig_allocacmp_sY_load = sY;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp54) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln233_reg_1037 == 1'd0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_2_reg_1246) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_reg_1246))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_fu_250_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_fu_250_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_802_p2 = (pY + 32'd1);

assign add_ln213_fu_814_p2 = (ap_sig_allocacmp_sY_load + 32'd1);

assign add_ln216_fu_758_p2 = (pX + 32'd1);

assign add_ln218_fu_770_p2 = (sX + 32'd1);

assign add_ln233_fu_256_p2 = (ap_phi_mux_indvar_flatten_phi_fu_188_p4 + 11'd1);

assign and_ln185_1_fu_644_p2 = (icmp_ln185_3_fu_632_p2 & icmp_ln185_2_fu_622_p2);

assign and_ln185_2_fu_650_p2 = (and_ln185_fu_638_p2 & and_ln185_1_fu_644_p2);

assign and_ln185_fu_638_p2 = (icmp_ln185_fu_602_p2 & icmp_ln185_1_fu_612_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((io_acc_block_signal_op187 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_2_reg_1246));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op187 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_2_reg_1246));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp54 = ((io_acc_block_signal_op187 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_2_reg_1246));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op187 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln185_2_reg_1246));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((io_acc_block_signal_op29 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_reg_1037 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((io_acc_block_signal_op29 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_reg_1037 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((io_acc_block_signal_op29 == 1'b0) & (icmp_ln233_reg_1037 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((io_acc_block_signal_op187 == 1'b0) & (1'd1 == and_ln185_2_reg_1246));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2_ignore_call30 = ((io_acc_block_signal_op187 == 1'b0) & (1'd1 == and_ln185_2_reg_1246));
end

always @ (*) begin
    ap_condition_1972 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_752_p2 == 1'd1) & (icmp_ln233_reg_1037 == 1'd0));
end

always @ (*) begin
    ap_condition_1977 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln203_reg_1330 == 1'd0));
end

always @ (*) begin
    ap_condition_333 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln203_fu_752_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_451 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_461 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_466 = ((icmp_ln203_reg_1330 == 1'd1) & (icmp_ln207_reg_1339 == 1'd0) & (icmp_ln233_reg_1037_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_195 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start = call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_start_reg;

assign icmp_ln1496_10_fu_698_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_11) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_27)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_916_p2 = (($signed(select_ln86_9_fu_906_p3) < $signed(select_ln86_10_fu_911_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_12_fu_704_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_4) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_20)) ? 1'b1 : 1'b0);

assign icmp_ln1496_13_fu_710_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_12) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_28)) ? 1'b1 : 1'b0);

assign icmp_ln1496_14_fu_940_p2 = (($signed(select_ln86_12_fu_930_p3) < $signed(select_ln86_13_fu_935_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_15_fu_716_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_5) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_21)) ? 1'b1 : 1'b0);

assign icmp_ln1496_16_fu_722_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_13) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_29)) ? 1'b1 : 1'b0);

assign icmp_ln1496_17_fu_964_p2 = (($signed(select_ln86_15_fu_954_p3) < $signed(select_ln86_16_fu_959_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_18_fu_728_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_6) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_22)) ? 1'b1 : 1'b0);

assign icmp_ln1496_19_fu_734_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_14) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_30)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_662_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_8) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_24)) ? 1'b1 : 1'b0);

assign icmp_ln1496_20_fu_988_p2 = (($signed(select_ln86_18_fu_978_p3) < $signed(select_ln86_19_fu_983_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_21_fu_740_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_7) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_23)) ? 1'b1 : 1'b0);

assign icmp_ln1496_22_fu_746_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_15) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_31)) ? 1'b1 : 1'b0);

assign icmp_ln1496_23_fu_1012_p2 = (($signed(select_ln86_21_fu_1002_p3) < $signed(select_ln86_22_fu_1007_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_844_p2 = (($signed(select_ln86_fu_834_p3) < $signed(select_ln86_1_fu_839_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_668_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_1) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_17)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_674_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_9) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_25)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_868_p2 = (($signed(select_ln86_3_fu_858_p3) < $signed(select_ln86_4_fu_863_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_680_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_2) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_686_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_10) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_26)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_892_p2 = (($signed(select_ln86_6_fu_882_p3) < $signed(select_ln86_7_fu_887_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_692_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_3) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_19)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_656_p2 = (($signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_0) < $signed(call_ret_shift_line_buffer_array_ap_fixed_8u_config4_s_fu_206_ap_return_16)) ? 1'b1 : 1'b0);

assign icmp_ln185_1_fu_612_p2 = ((ap_sig_allocacmp_sY_load == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln185_2_fu_622_p2 = (($signed(pY) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_3_fu_632_p2 = (($signed(pX) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_602_p2 = ((sX == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_752_p2 = ((pX == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_796_p2 = ((pY == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_250_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_188_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op187 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op29 = (data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign res_V_data_0_V_din = tmp_data_0_V_32_reg_1348;

assign res_V_data_1_V_din = tmp_data_1_V_30_reg_1353;

assign res_V_data_2_V_din = tmp_data_2_V_30_reg_1358;

assign res_V_data_3_V_din = tmp_data_3_V_30_reg_1363;

assign res_V_data_4_V_din = tmp_data_4_V_16_reg_1368;

assign res_V_data_5_V_din = tmp_data_5_V_16_reg_1373;

assign res_V_data_6_V_din = tmp_data_6_V_16_reg_1378;

assign res_V_data_7_V_din = tmp_data_7_V_16_reg_1383;

assign select_ln213_fu_820_p3 = ((icmp_ln185_1_fu_612_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_814_p2);

assign select_ln218_fu_776_p3 = ((icmp_ln185_fu_602_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_770_p2);

assign select_ln86_10_fu_911_p3 = ((icmp_ln1496_10_reg_1285[0:0] === 1'b1) ? pool_window_3_V_3_reg_1221 : pool_window_2_V_3_reg_1106);

assign select_ln86_12_fu_930_p3 = ((icmp_ln1496_12_reg_1290[0:0] === 1'b1) ? pool_window_1_V_4_reg_1186 : pool_window_0_V_4_reg_1141);

assign select_ln86_13_fu_935_p3 = ((icmp_ln1496_13_reg_1295[0:0] === 1'b1) ? pool_window_3_V_4_reg_1226 : pool_window_2_V_4_reg_1101);

assign select_ln86_15_fu_954_p3 = ((icmp_ln1496_15_reg_1300[0:0] === 1'b1) ? pool_window_1_V_5_reg_1191 : pool_window_0_V_5_reg_1136);

assign select_ln86_16_fu_959_p3 = ((icmp_ln1496_16_reg_1305[0:0] === 1'b1) ? pool_window_3_V_5_reg_1231 : pool_window_2_V_5_reg_1096);

assign select_ln86_18_fu_978_p3 = ((icmp_ln1496_18_reg_1310[0:0] === 1'b1) ? pool_window_1_V_6_reg_1196 : pool_window_0_V_6_reg_1131);

assign select_ln86_19_fu_983_p3 = ((icmp_ln1496_19_reg_1315[0:0] === 1'b1) ? pool_window_3_V_6_reg_1236 : pool_window_2_V_6_reg_1091);

assign select_ln86_1_fu_839_p3 = ((icmp_ln1496_1_reg_1255[0:0] === 1'b1) ? pool_window_3_V_1_reg_1206 : pool_window_2_V_1_reg_1121);

assign select_ln86_21_fu_1002_p3 = ((icmp_ln1496_21_reg_1320[0:0] === 1'b1) ? pool_window_1_V_7_reg_1201 : pool_window_0_V_7_reg_1126);

assign select_ln86_22_fu_1007_p3 = ((icmp_ln1496_22_reg_1325[0:0] === 1'b1) ? pool_window_3_V_7_reg_1241 : pool_window_2_V_7_reg_1086);

assign select_ln86_3_fu_858_p3 = ((icmp_ln1496_3_reg_1260[0:0] === 1'b1) ? pool_window_1_V_reg_1171 : pool_window_0_V_reg_1156);

assign select_ln86_4_fu_863_p3 = ((icmp_ln1496_4_reg_1265[0:0] === 1'b1) ? pool_window_3_V_reg_1211 : pool_window_2_V_reg_1116);

assign select_ln86_6_fu_882_p3 = ((icmp_ln1496_6_reg_1270[0:0] === 1'b1) ? pool_window_1_V_2_reg_1176 : pool_window_0_V_2_reg_1151);

assign select_ln86_7_fu_887_p3 = ((icmp_ln1496_7_reg_1275[0:0] === 1'b1) ? pool_window_3_V_2_reg_1216 : pool_window_2_V_2_reg_1111);

assign select_ln86_9_fu_906_p3 = ((icmp_ln1496_9_reg_1280[0:0] === 1'b1) ? pool_window_1_V_3_reg_1181 : pool_window_0_V_3_reg_1146);

assign select_ln86_fu_834_p3 = ((icmp_ln1496_reg_1250[0:0] === 1'b1) ? pool_window_1_V_1_reg_1166 : pool_window_0_V_1_reg_1161);

assign start_out = real_start;

assign tmp_data_0_V_32_fu_850_p3 = ((icmp_ln1496_2_fu_844_p2[0:0] === 1'b1) ? select_ln86_1_fu_839_p3 : select_ln86_fu_834_p3);

assign tmp_data_1_V_30_fu_874_p3 = ((icmp_ln1496_5_fu_868_p2[0:0] === 1'b1) ? select_ln86_4_fu_863_p3 : select_ln86_3_fu_858_p3);

assign tmp_data_2_V_30_fu_898_p3 = ((icmp_ln1496_8_fu_892_p2[0:0] === 1'b1) ? select_ln86_7_fu_887_p3 : select_ln86_6_fu_882_p3);

assign tmp_data_3_V_30_fu_922_p3 = ((icmp_ln1496_11_fu_916_p2[0:0] === 1'b1) ? select_ln86_10_fu_911_p3 : select_ln86_9_fu_906_p3);

assign tmp_data_4_V_16_fu_946_p3 = ((icmp_ln1496_14_fu_940_p2[0:0] === 1'b1) ? select_ln86_13_fu_935_p3 : select_ln86_12_fu_930_p3);

assign tmp_data_5_V_16_fu_970_p3 = ((icmp_ln1496_17_fu_964_p2[0:0] === 1'b1) ? select_ln86_16_fu_959_p3 : select_ln86_15_fu_954_p3);

assign tmp_data_6_V_16_fu_994_p3 = ((icmp_ln1496_20_fu_988_p2[0:0] === 1'b1) ? select_ln86_19_fu_983_p3 : select_ln86_18_fu_978_p3);

assign tmp_data_7_V_16_fu_1018_p3 = ((icmp_ln1496_23_fu_1012_p2[0:0] === 1'b1) ? select_ln86_22_fu_1007_p3 : select_ln86_21_fu_1002_p3);

endmodule //pooling2d_cl_array_array_ap_fixed_8u_config4_s
