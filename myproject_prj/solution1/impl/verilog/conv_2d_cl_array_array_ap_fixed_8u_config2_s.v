// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_8u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_pp0_stage0 = 6'd8;
parameter    ap_ST_fsm_state12 = 6'd16;
parameter    ap_ST_fsm_state13 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [31:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [31:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [31:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [31:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [31:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [31:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [31:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [31:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] kernel_data_V_8473;
reg   [31:0] kernel_data_V_0;
reg   [31:0] kernel_data_V_1466;
reg   [31:0] kernel_data_V_2467;
reg   [31:0] kernel_data_V_3468;
reg   [31:0] kernel_data_V_4469;
reg   [31:0] kernel_data_V_5470;
reg   [31:0] kernel_data_V_6471;
reg   [31:0] kernel_data_V_7472;
wire   [3:0] w2_V_address0;
reg    w2_V_ce0;
wire   [237:0] w2_V_q0;
reg   [31:0] pX_3;
reg   [31:0] sX_3;
reg   [31:0] pY_3;
reg   [31:0] sY_3;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_state2;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state12;
reg   [0:0] and_ln272_2_reg_1147;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [3:0] w_index22_reg_243;
reg   [31:0] tmp_data_0_V_7420_reg_254;
reg   [31:0] tmp_data_1_V_6718_reg_265;
reg   [31:0] tmp_data_2_V_6716_reg_276;
reg   [31:0] tmp_data_3_V_6714_reg_287;
reg   [31:0] tmp_data_4_V_2912_reg_298;
reg   [31:0] tmp_data_5_V_2910_reg_309;
reg   [31:0] tmp_data_6_V_298_reg_320;
reg   [31:0] tmp_data_7_V_296_reg_331;
reg   [31:0] tmp_data_0_V_reg_1110;
reg   [31:0] sX_3_load_reg_1115;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln272_fu_492_p2;
reg   [0:0] icmp_ln272_reg_1120;
reg   [31:0] sY_3_load_reg_1125;
wire   [0:0] icmp_ln272_1_fu_502_p2;
reg   [0:0] icmp_ln272_1_reg_1130;
reg   [31:0] pY_3_load_reg_1135;
reg   [31:0] pX_3_load_reg_1141;
wire   [0:0] and_ln272_2_fu_560_p2;
wire   [10:0] add_ln78_fu_566_p2;
reg   [10:0] add_ln78_reg_1151;
wire   [0:0] icmp_ln19_fu_572_p2;
reg   [0:0] icmp_ln19_reg_1156;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln19_1_fu_578_p2;
reg   [0:0] icmp_ln19_1_reg_1161;
wire   [0:0] icmp_ln19_2_fu_584_p2;
reg   [0:0] icmp_ln19_2_reg_1167;
wire   [0:0] icmp_ln19_3_fu_590_p2;
reg   [0:0] icmp_ln19_3_reg_1172;
wire   [0:0] icmp_ln19_4_fu_596_p2;
reg   [0:0] icmp_ln19_4_reg_1178;
wire   [0:0] icmp_ln19_5_fu_602_p2;
reg   [0:0] icmp_ln19_5_reg_1183;
wire   [0:0] icmp_ln19_6_fu_608_p2;
reg   [0:0] icmp_ln19_6_reg_1189;
wire   [0:0] icmp_ln19_7_fu_614_p2;
reg   [0:0] icmp_ln19_7_reg_1194;
wire   [3:0] w_index_fu_625_p2;
reg   [3:0] w_index_reg_1205;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln64_fu_631_p2;
reg   [0:0] icmp_ln64_reg_1210;
reg   [0:0] icmp_ln64_reg_1210_pp0_iter1_reg;
reg   [0:0] icmp_ln64_reg_1210_pp0_iter2_reg;
reg   [0:0] icmp_ln64_reg_1210_pp0_iter3_reg;
reg   [0:0] icmp_ln64_reg_1210_pp0_iter4_reg;
reg   [0:0] icmp_ln64_reg_1210_pp0_iter5_reg;
reg   [0:0] icmp_ln64_reg_1210_pp0_iter6_reg;
wire  signed [31:0] select_ln19_7_fu_735_p3;
reg  signed [31:0] select_ln19_7_reg_1214;
wire   [31:0] trunc_ln76_fu_743_p1;
reg  signed [31:0] trunc_ln76_reg_1220;
reg  signed [31:0] tmp_2_reg_1225;
reg  signed [31:0] tmp_3_reg_1230;
reg  signed [31:0] tmp_4_reg_1235;
reg  signed [31:0] tmp_5_reg_1240;
reg  signed [31:0] tmp_6_reg_1245;
reg  signed [31:0] tmp_7_reg_1250;
reg  signed [13:0] tmp_8_reg_1255;
wire  signed [47:0] sext_ln1116_cast_fu_817_p1;
reg   [31:0] trunc_ln_reg_1316;
reg   [31:0] trunc_ln708_s_reg_1321;
reg   [31:0] trunc_ln708_1_reg_1326;
reg   [31:0] trunc_ln708_2_reg_1331;
reg   [31:0] trunc_ln708_3_reg_1336;
reg   [31:0] trunc_ln708_4_reg_1341;
reg   [31:0] trunc_ln708_5_reg_1346;
reg   [29:0] trunc_ln708_6_reg_1351;
wire   [31:0] acc_0_V_fu_975_p2;
reg   [31:0] acc_0_V_reg_1356;
reg    ap_enable_reg_pp0_iter7;
wire   [31:0] acc_1_V_fu_980_p2;
reg   [31:0] acc_1_V_reg_1362;
wire   [31:0] acc_2_V_fu_985_p2;
reg   [31:0] acc_2_V_reg_1368;
wire   [31:0] acc_3_V_fu_990_p2;
reg   [31:0] acc_3_V_reg_1374;
wire   [31:0] acc_4_V_fu_995_p2;
reg   [31:0] acc_4_V_reg_1380;
wire   [31:0] acc_5_V_fu_1000_p2;
reg   [31:0] acc_5_V_reg_1386;
wire   [31:0] acc_6_V_fu_1005_p2;
reg   [31:0] acc_6_V_reg_1392;
wire   [31:0] acc_7_V_fu_1013_p2;
reg   [31:0] acc_7_V_reg_1398;
wire   [0:0] icmp_ln293_fu_1019_p2;
reg   [0:0] icmp_ln293_reg_1404;
wire    io_acc_block_signal_op200;
reg    ap_block_state12;
wire   [31:0] select_ln308_fu_1040_p3;
reg   [31:0] select_ln308_reg_1408;
wire   [0:0] icmp_ln297_fu_1059_p2;
reg   [0:0] icmp_ln297_reg_1413;
wire   [31:0] select_ln303_fu_1080_p3;
reg   [31:0] select_ln303_reg_1417;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_ready;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_0;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_1;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_2;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_3;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_4;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_5;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_6;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_7;
wire   [31:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_8;
reg   [10:0] indvar_flatten23_reg_231;
reg    ap_block_state1;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln78_fu_1104_p2;
reg   [3:0] ap_phi_mux_w_index22_phi_fu_247_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_346_p4;
reg   [31:0] storemerge_i_i_reg_342;
wire   [63:0] zext_ln76_fu_620_p1;
wire   [31:0] add_ln306_fu_1024_p2;
wire   [31:0] add_ln301_fu_1064_p2;
wire   [30:0] tmp_fu_512_p4;
wire   [30:0] tmp_1_fu_532_p4;
wire   [0:0] icmp_ln272_2_fu_522_p2;
wire   [0:0] icmp_ln272_3_fu_542_p2;
wire   [0:0] and_ln272_1_fu_554_p2;
wire   [0:0] and_ln272_fu_548_p2;
wire   [0:0] or_ln19_fu_656_p2;
wire   [31:0] select_ln19_fu_649_p3;
wire   [31:0] select_ln19_1_fu_660_p3;
wire   [0:0] or_ln19_1_fu_667_p2;
wire   [0:0] or_ln19_2_fu_678_p2;
wire   [31:0] select_ln19_2_fu_671_p3;
wire   [31:0] select_ln19_3_fu_682_p3;
wire   [0:0] or_ln19_3_fu_689_p2;
wire   [0:0] or_ln19_4_fu_701_p2;
wire   [31:0] select_ln19_4_fu_693_p3;
wire   [31:0] select_ln19_5_fu_707_p3;
wire   [0:0] or_ln19_5_fu_715_p2;
wire   [0:0] or_ln19_6_fu_729_p2;
wire   [31:0] select_ln19_6_fu_721_p3;
wire  signed [31:0] grp_fu_823_p0;
wire  signed [31:0] grp_fu_835_p0;
wire  signed [31:0] grp_fu_844_p0;
wire  signed [31:0] grp_fu_853_p0;
wire  signed [31:0] grp_fu_862_p0;
wire  signed [31:0] grp_fu_871_p0;
wire  signed [31:0] grp_fu_880_p0;
wire   [47:0] grp_fu_823_p2;
wire   [47:0] grp_fu_835_p2;
wire   [47:0] grp_fu_844_p2;
wire   [47:0] grp_fu_853_p2;
wire   [47:0] grp_fu_862_p2;
wire   [47:0] grp_fu_871_p2;
wire   [47:0] grp_fu_880_p2;
wire   [45:0] grp_fu_889_p2;
wire  signed [31:0] sext_ln708_fu_1010_p1;
wire   [31:0] add_ln308_fu_1035_p2;
wire   [31:0] add_ln303_fu_1075_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_336;
reg    ap_condition_345;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_8473 = 32'd0;
#0 kernel_data_V_0 = 32'd0;
#0 kernel_data_V_1466 = 32'd0;
#0 kernel_data_V_2467 = 32'd0;
#0 kernel_data_V_3468 = 32'd0;
#0 kernel_data_V_4469 = 32'd0;
#0 kernel_data_V_5470 = 32'd0;
#0 kernel_data_V_6471 = 32'd0;
#0 kernel_data_V_7472 = 32'd0;
#0 pX_3 = 32'd0;
#0 sX_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

conv_2d_cl_array_array_ap_fixed_8u_config2_s_w2_V #(
    .DataWidth( 238 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_ready),
    .in_elem_data_V_read(tmp_data_0_V_reg_1110),
    .kernel_window_1_V_read(kernel_data_V_1466),
    .kernel_window_2_V_read(kernel_data_V_2467),
    .kernel_window_4_V_read(kernel_data_V_4469),
    .kernel_window_5_V_read(kernel_data_V_5470),
    .kernel_window_7_V_read(kernel_data_V_7472),
    .kernel_window_8_V_read(kernel_data_V_8473),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_8)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_823_p0),
    .din1(trunc_ln76_reg_1220),
    .ce(1'b1),
    .dout(grp_fu_823_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_835_p0),
    .din1(tmp_2_reg_1225),
    .ce(1'b1),
    .dout(grp_fu_835_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_844_p0),
    .din1(tmp_3_reg_1230),
    .ce(1'b1),
    .dout(grp_fu_844_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_853_p0),
    .din1(tmp_4_reg_1235),
    .ce(1'b1),
    .dout(grp_fu_853_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_862_p0),
    .din1(tmp_5_reg_1240),
    .ce(1'b1),
    .dout(grp_fu_862_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_871_p0),
    .din1(tmp_6_reg_1245),
    .ce(1'b1),
    .dout(grp_fu_871_p2)
);

myproject_axi_mul_32s_32s_48_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
myproject_axi_mul_32s_32s_48_5_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_880_p0),
    .din1(tmp_7_reg_1250),
    .ce(1'b1),
    .dout(grp_fu_880_p2)
);

myproject_axi_mul_14s_32s_46_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
myproject_axi_mul_14s_32s_46_5_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_1255),
    .din1(select_ln19_7_reg_1214),
    .ce(1'b1),
    .dout(grp_fu_889_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_1104_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_631_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1104_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        indvar_flatten23_reg_231 <= add_ln78_reg_1151;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten23_reg_231 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_336)) begin
        if ((icmp_ln293_fu_1019_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln293_fu_1019_p2 == 1'd0)) begin
            pX_3 <= add_ln306_fu_1024_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_345)) begin
        if ((icmp_ln297_fu_1059_p2 == 1'd1)) begin
            pY_3 <= 32'd0;
        end else if ((icmp_ln297_fu_1059_p2 == 1'd0)) begin
            pY_3 <= add_ln301_fu_1064_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_reg_1404 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        sX_3 <= select_ln308_reg_1408;
    end else if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1019_p2 == 1'd1))) begin
        sX_3 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln297_fu_1059_p2 == 1'd1) & (icmp_ln293_fu_1019_p2 == 1'd1))) begin
        storemerge_i_i_reg_342 <= 32'd0;
    end else if (((icmp_ln297_reg_1413 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln293_reg_1404 == 1'd1))) begin
        storemerge_i_i_reg_342 <= select_ln303_reg_1417;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_0_V_7420_reg_254 <= acc_0_V_fu_975_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_0_V_7420_reg_254 <= 32'd19033;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_1_V_6718_reg_265 <= acc_1_V_fu_980_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_1_V_6718_reg_265 <= 32'd4427;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_2_V_6716_reg_276 <= acc_2_V_fu_985_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_2_V_6716_reg_276 <= 32'd4294954627;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_3_V_6714_reg_287 <= acc_3_V_fu_990_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_3_V_6714_reg_287 <= 32'd19094;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_4_V_2912_reg_298 <= acc_4_V_fu_995_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_4_V_2912_reg_298 <= 32'd12946;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_5_V_2910_reg_309 <= acc_5_V_fu_1000_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_5_V_2910_reg_309 <= 32'd4294959754;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_6_V_298_reg_320 <= acc_6_V_fu_1005_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_6_V_298_reg_320 <= 32'd826;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_7_V_296_reg_331 <= acc_7_V_fu_1013_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        tmp_data_7_V_296_reg_331 <= 32'd21998;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1210 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_index22_reg_243 <= w_index_reg_1205;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
        w_index22_reg_243 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0_V_reg_1356 <= acc_0_V_fu_975_p2;
        acc_1_V_reg_1362 <= acc_1_V_fu_980_p2;
        acc_2_V_reg_1368 <= acc_2_V_fu_985_p2;
        acc_3_V_reg_1374 <= acc_3_V_fu_990_p2;
        acc_4_V_reg_1380 <= acc_4_V_fu_995_p2;
        acc_5_V_reg_1386 <= acc_5_V_fu_1000_p2;
        acc_6_V_reg_1392 <= acc_6_V_fu_1005_p2;
        acc_7_V_reg_1398 <= acc_7_V_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln78_reg_1151 <= add_ln78_fu_566_p2;
        and_ln272_2_reg_1147 <= and_ln272_2_fu_560_p2;
        icmp_ln272_1_reg_1130 <= icmp_ln272_1_fu_502_p2;
        icmp_ln272_reg_1120 <= icmp_ln272_fu_492_p2;
        kernel_data_V_0 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_0;
        kernel_data_V_1466 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_3;
        kernel_data_V_2467 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_4;
        kernel_data_V_3468 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_1;
        kernel_data_V_4469 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_5;
        kernel_data_V_5470 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_6;
        kernel_data_V_6471 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_2;
        kernel_data_V_7472 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_7;
        kernel_data_V_8473 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_return_8;
        pX_3_load_reg_1141 <= pX_3;
        pY_3_load_reg_1135 <= pY_3;
        sX_3_load_reg_1115 <= sX_3;
        sY_3_load_reg_1125 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln19_1_reg_1161 <= icmp_ln19_1_fu_578_p2;
        icmp_ln19_2_reg_1167 <= icmp_ln19_2_fu_584_p2;
        icmp_ln19_3_reg_1172 <= icmp_ln19_3_fu_590_p2;
        icmp_ln19_4_reg_1178 <= icmp_ln19_4_fu_596_p2;
        icmp_ln19_5_reg_1183 <= icmp_ln19_5_fu_602_p2;
        icmp_ln19_6_reg_1189 <= icmp_ln19_6_fu_608_p2;
        icmp_ln19_7_reg_1194 <= icmp_ln19_7_fu_614_p2;
        icmp_ln19_reg_1156 <= icmp_ln19_fu_572_p2;
        icmp_ln64_reg_1210 <= icmp_ln64_fu_631_p2;
        icmp_ln64_reg_1210_pp0_iter1_reg <= icmp_ln64_reg_1210;
        select_ln19_7_reg_1214 <= select_ln19_7_fu_735_p3;
        tmp_2_reg_1225 <= {{w2_V_q0[63:32]}};
        tmp_3_reg_1230 <= {{w2_V_q0[95:64]}};
        tmp_4_reg_1235 <= {{w2_V_q0[127:96]}};
        tmp_5_reg_1240 <= {{w2_V_q0[159:128]}};
        tmp_6_reg_1245 <= {{w2_V_q0[191:160]}};
        tmp_7_reg_1250 <= {{w2_V_q0[223:192]}};
        tmp_8_reg_1255 <= {{w2_V_q0[237:224]}};
        trunc_ln76_reg_1220 <= trunc_ln76_fu_743_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12))) begin
        icmp_ln293_reg_1404 <= icmp_ln293_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1019_p2 == 1'd1))) begin
        icmp_ln297_reg_1413 <= icmp_ln297_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln64_reg_1210_pp0_iter2_reg <= icmp_ln64_reg_1210_pp0_iter1_reg;
        icmp_ln64_reg_1210_pp0_iter3_reg <= icmp_ln64_reg_1210_pp0_iter2_reg;
        icmp_ln64_reg_1210_pp0_iter4_reg <= icmp_ln64_reg_1210_pp0_iter3_reg;
        icmp_ln64_reg_1210_pp0_iter5_reg <= icmp_ln64_reg_1210_pp0_iter4_reg;
        icmp_ln64_reg_1210_pp0_iter6_reg <= icmp_ln64_reg_1210_pp0_iter5_reg;
        trunc_ln708_1_reg_1326 <= {{grp_fu_844_p2[47:16]}};
        trunc_ln708_2_reg_1331 <= {{grp_fu_853_p2[47:16]}};
        trunc_ln708_3_reg_1336 <= {{grp_fu_862_p2[47:16]}};
        trunc_ln708_4_reg_1341 <= {{grp_fu_871_p2[47:16]}};
        trunc_ln708_5_reg_1346 <= {{grp_fu_880_p2[47:16]}};
        trunc_ln708_6_reg_1351 <= {{grp_fu_889_p2[45:16]}};
        trunc_ln708_s_reg_1321 <= {{grp_fu_835_p2[47:16]}};
        trunc_ln_reg_1316 <= {{grp_fu_823_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln293_reg_1404 == 1'd1))) begin
        sY_3 <= ap_phi_mux_storemerge_i_i_phi_fu_346_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (icmp_ln297_fu_1059_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1019_p2 == 1'd1))) begin
        select_ln303_reg_1417 <= select_ln303_fu_1080_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (icmp_ln293_fu_1019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        select_ln308_reg_1408 <= select_ln308_fu_1040_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_data_0_V_reg_1110 <= data_V_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_index_reg_1205 <= w_index_fu_625_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_1104_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln297_reg_1413 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln293_reg_1404 == 1'd1))) begin
        ap_phi_mux_storemerge_i_i_phi_fu_346_p4 = select_ln303_reg_1417;
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_346_p4 = storemerge_i_i_reg_342;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln64_reg_1210 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_w_index22_phi_fu_247_p4 = w_index_reg_1205;
    end else begin
        ap_phi_mux_w_index22_phi_fu_247_p4 = w_index22_reg_243;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_start = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_353_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_1104_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (1'd1 == and_ln272_2_reg_1147))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln272_2_fu_560_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_1104_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_975_p2 = (tmp_data_0_V_7420_reg_254 + trunc_ln_reg_1316);

assign acc_1_V_fu_980_p2 = (tmp_data_1_V_6718_reg_265 + trunc_ln708_s_reg_1321);

assign acc_2_V_fu_985_p2 = (tmp_data_2_V_6716_reg_276 + trunc_ln708_1_reg_1326);

assign acc_3_V_fu_990_p2 = (tmp_data_3_V_6714_reg_287 + trunc_ln708_2_reg_1331);

assign acc_4_V_fu_995_p2 = (tmp_data_4_V_2912_reg_298 + trunc_ln708_3_reg_1336);

assign acc_5_V_fu_1000_p2 = (tmp_data_5_V_2910_reg_309 + trunc_ln708_4_reg_1341);

assign acc_6_V_fu_1005_p2 = (tmp_data_6_V_298_reg_320 + trunc_ln708_5_reg_1346);

assign acc_7_V_fu_1013_p2 = ($signed(tmp_data_7_V_296_reg_331) + $signed(sext_ln708_fu_1010_p1));

assign add_ln301_fu_1064_p2 = (pY_3_load_reg_1135 + 32'd1);

assign add_ln303_fu_1075_p2 = (sY_3_load_reg_1125 + 32'd1);

assign add_ln306_fu_1024_p2 = (pX_3_load_reg_1141 + 32'd1);

assign add_ln308_fu_1035_p2 = (sX_3_load_reg_1115 + 32'd1);

assign add_ln78_fu_566_p2 = (indvar_flatten23_reg_231 + 11'd1);

assign and_ln272_1_fu_554_p2 = (icmp_ln272_3_fu_542_p2 & icmp_ln272_2_fu_522_p2);

assign and_ln272_2_fu_560_p2 = (and_ln272_fu_548_p2 & and_ln272_1_fu_554_p2);

assign and_ln272_fu_548_p2 = (icmp_ln272_fu_492_p2 & icmp_ln272_1_fu_502_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12 = ((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_336 = (~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12));
end

always @ (*) begin
    ap_condition_345 = (~((io_acc_block_signal_op200 == 1'b0) & (1'd1 == and_ln272_2_reg_1147)) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln293_fu_1019_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_fu_823_p0 = sext_ln1116_cast_fu_817_p1;

assign grp_fu_835_p0 = sext_ln1116_cast_fu_817_p1;

assign grp_fu_844_p0 = sext_ln1116_cast_fu_817_p1;

assign grp_fu_853_p0 = sext_ln1116_cast_fu_817_p1;

assign grp_fu_862_p0 = sext_ln1116_cast_fu_817_p1;

assign grp_fu_871_p0 = sext_ln1116_cast_fu_817_p1;

assign grp_fu_880_p0 = sext_ln1116_cast_fu_817_p1;

assign icmp_ln19_1_fu_578_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_584_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_590_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln19_4_fu_596_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln19_5_fu_602_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln19_6_fu_608_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln19_7_fu_614_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_572_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln272_1_fu_502_p2 = ((sY_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln272_2_fu_522_p2 = (($signed(tmp_fu_512_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_3_fu_542_p2 = (($signed(tmp_1_fu_532_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_492_p2 = ((sX_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_1019_p2 = ((pX_3_load_reg_1141 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_1059_p2 = ((pY_3_load_reg_1135 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_631_p2 = ((ap_phi_mux_w_index22_phi_fu_247_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1104_p2 = ((indvar_flatten23_reg_231 == 11'd1155) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op200 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign or_ln19_1_fu_667_p2 = (icmp_ln19_5_reg_1183 | icmp_ln19_4_reg_1178);

assign or_ln19_2_fu_678_p2 = (icmp_ln19_3_reg_1172 | icmp_ln19_2_reg_1167);

assign or_ln19_3_fu_689_p2 = (icmp_ln19_reg_1156 | icmp_ln19_1_reg_1161);

assign or_ln19_4_fu_701_p2 = (or_ln19_fu_656_p2 | or_ln19_1_fu_667_p2);

assign or_ln19_5_fu_715_p2 = (or_ln19_3_fu_689_p2 | or_ln19_2_fu_678_p2);

assign or_ln19_6_fu_729_p2 = (or_ln19_5_fu_715_p2 | or_ln19_4_fu_701_p2);

assign or_ln19_fu_656_p2 = (icmp_ln19_7_reg_1194 | icmp_ln19_6_reg_1189);

assign res_V_data_0_V_din = acc_0_V_reg_1356;

assign res_V_data_1_V_din = acc_1_V_reg_1362;

assign res_V_data_2_V_din = acc_2_V_reg_1368;

assign res_V_data_3_V_din = acc_3_V_reg_1374;

assign res_V_data_4_V_din = acc_4_V_reg_1380;

assign res_V_data_5_V_din = acc_5_V_reg_1386;

assign res_V_data_6_V_din = acc_6_V_reg_1392;

assign res_V_data_7_V_din = acc_7_V_reg_1398;

assign select_ln19_1_fu_660_p3 = ((icmp_ln19_5_reg_1183[0:0] === 1'b1) ? kernel_data_V_5470 : kernel_data_V_4469);

assign select_ln19_2_fu_671_p3 = ((icmp_ln19_3_reg_1172[0:0] === 1'b1) ? kernel_data_V_3468 : kernel_data_V_2467);

assign select_ln19_3_fu_682_p3 = ((icmp_ln19_1_reg_1161[0:0] === 1'b1) ? kernel_data_V_1466 : kernel_data_V_0);

assign select_ln19_4_fu_693_p3 = ((or_ln19_fu_656_p2[0:0] === 1'b1) ? select_ln19_fu_649_p3 : select_ln19_1_fu_660_p3);

assign select_ln19_5_fu_707_p3 = ((or_ln19_2_fu_678_p2[0:0] === 1'b1) ? select_ln19_2_fu_671_p3 : select_ln19_3_fu_682_p3);

assign select_ln19_6_fu_721_p3 = ((or_ln19_4_fu_701_p2[0:0] === 1'b1) ? select_ln19_4_fu_693_p3 : select_ln19_5_fu_707_p3);

assign select_ln19_7_fu_735_p3 = ((or_ln19_6_fu_729_p2[0:0] === 1'b1) ? select_ln19_6_fu_721_p3 : kernel_data_V_8473);

assign select_ln19_fu_649_p3 = ((icmp_ln19_7_reg_1194[0:0] === 1'b1) ? kernel_data_V_7472 : kernel_data_V_6471);

assign select_ln303_fu_1080_p3 = ((icmp_ln272_1_reg_1130[0:0] === 1'b1) ? 32'd2 : add_ln303_fu_1075_p2);

assign select_ln308_fu_1040_p3 = ((icmp_ln272_reg_1120[0:0] === 1'b1) ? 32'd2 : add_ln308_fu_1035_p2);

assign sext_ln1116_cast_fu_817_p1 = select_ln19_7_reg_1214;

assign sext_ln708_fu_1010_p1 = $signed(trunc_ln708_6_reg_1351);

assign start_out = real_start;

assign tmp_1_fu_532_p4 = {{pX_3[31:1]}};

assign tmp_fu_512_p4 = {{pY_3[31:1]}};

assign trunc_ln76_fu_743_p1 = w2_V_q0[31:0];

assign w2_V_address0 = zext_ln76_fu_620_p1;

assign w_index_fu_625_p2 = (4'd1 + ap_phi_mux_w_index22_phi_fu_247_p4);

assign zext_ln76_fu_620_p1 = ap_phi_mux_w_index22_phi_fu_247_p4;

endmodule //conv_2d_cl_array_array_ap_fixed_8u_config2_s
